{"ast":null,"code":"var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane'\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    }\n  }\n};\nvar LayerGroup = {\n  mixins: [Layer],\n  mounted: function mounted() {\n    this.layerGroupOptions = this.layerOptions;\n  },\n  methods: {\n    addLayer: function addLayer(layer, alreadyAdded) {\n      if (!alreadyAdded) {\n        this.mapObject.addLayer(layer.mapObject);\n      }\n      this.parentContainer.addLayer(layer, true);\n    },\n    removeLayer: function removeLayer(layer, alreadyRemoved) {\n      if (!alreadyRemoved) {\n        this.mapObject.removeLayer(layer.mapObject);\n      }\n      this.parentContainer.removeLayer(layer, true);\n    }\n  }\n};\nexport default LayerGroup;","map":{"version":3,"names":["Layer","props","pane","type","String","default","attribution","custom","name","undefined","layerType","visible","Boolean","mounted","layerOptions","beforeDestroy","unbindPopup","unbindTooltip","parentContainer","removeLayer","methods","setAttribution","val","old","attributionControl","$parent","mapObject","removeAttribution","addAttribution","setName","addLayer","setLayerType","setVisible","isVisible","hideLayer","tooltip","getTooltip","popup","getPopup","updateVisibleProp","value","$emit","LayerGroup","mixins","layerGroupOptions","layer","alreadyAdded","alreadyRemoved"],"sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/vue2-leaflet/dist/mixins/LayerGroup.js"],"sourcesContent":["var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane',\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true,\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true,\n    },\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane,\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    },\n  },\n};\n\nvar LayerGroup = {\n  mixins: [Layer],\n  mounted: function mounted () {\n    this.layerGroupOptions = this.layerOptions;\n  },\n  methods: {\n    addLayer: function addLayer (layer, alreadyAdded) {\n      if (!alreadyAdded) {\n        this.mapObject.addLayer(layer.mapObject);\n      }\n      this.parentContainer.addLayer(layer, true);\n    },\n    removeLayer: function removeLayer (layer, alreadyRemoved) {\n      if (!alreadyRemoved) {\n        this.mapObject.removeLayer(layer.mapObject);\n      }\n      this.parentContainer.removeLayer(layer, true);\n    }\n  }\n};\n\nexport default LayerGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}