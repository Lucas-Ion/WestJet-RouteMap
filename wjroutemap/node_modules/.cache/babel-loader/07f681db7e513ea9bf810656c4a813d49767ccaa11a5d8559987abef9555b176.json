{"ast":null,"code":"import { propsToLeafletOptions } from \"../utils\";\nimport { layerProps, setupLayer } from \"./layer\";\n/**\n * @typedef {import('leaflet/dist/leaflet-src.esm.js').LatLngBounds} LatLngBounds\n */\n\nexport const imageOverlayProps = {\n  ...layerProps,\n  opacity: {\n    type: Number\n  },\n  alt: {\n    type: String\n  },\n  interactive: {\n    type: Boolean,\n    default: undefined\n  },\n  crossOrigin: {\n    type: Boolean,\n    default: undefined\n  },\n  errorOverlayUrl: {\n    type: String\n  },\n  zIndex: {\n    type: Number\n  },\n  className: {\n    type: String\n  },\n  url: {\n    type: String,\n    required: true,\n    custom: true\n  },\n  bounds: {\n    type: [Array, Object],\n    required: true,\n    custom: true\n  }\n};\nexport const setupImageOverlay = (props, leafletRef, context) => {\n  const {\n    options: layerOptions,\n    methods: layerMethods\n  } = setupLayer(props, leafletRef, context);\n  const options = propsToLeafletOptions(props, imageOverlayProps, layerOptions);\n  const methods = {\n    ...layerMethods,\n    /**\n     * Sets the opacity of the overlay.\n     * @param {number} opacity\n     */\n    setOpacity(opacity) {\n      return leafletRef.value.setOpacity(opacity);\n    },\n    /**\n     * Changes the URL of the image.\n     * @param {string} url\n     */\n    setUrl(url) {\n      return leafletRef.value.setUrl(url);\n    },\n    /**\n     * Update the bounds that this ImageOverlay covers\n     * @param {LatLngBounds | Array<Array<number>>} bounds\n     */\n    setBounds(bounds) {\n      return leafletRef.value.setBounds(bounds);\n    },\n    /**\n     * Get the bounds that this ImageOverlay covers\n     * @returns {LatLngBounds}\n     */\n    getBounds() {\n      return leafletRef.value.getBounds();\n    },\n    /**\n     * Returns the instance of HTMLImageElement used by this overlay.\n     * @returns {HTMLElement}\n     */\n    getElement() {\n      return leafletRef.value.getElement();\n    },\n    /**\n     * Brings the layer to the top of all overlays.\n     */\n    bringToFront() {\n      return leafletRef.value.bringToFront();\n    },\n    /**\n     * Brings the layer to the bottom of all overlays.\n     */\n    bringToBack() {\n      return leafletRef.value.bringToBack();\n    },\n    /**\n     * Changes the zIndex of the image overlay.\n     * @param {number} zIndex\n     */\n    setZIndex(zIndex) {\n      return leafletRef.value.setZIndex(zIndex);\n    }\n  };\n  return {\n    options,\n    methods\n  };\n};","map":{"version":3,"names":["propsToLeafletOptions","layerProps","setupLayer","imageOverlayProps","opacity","type","Number","alt","String","interactive","Boolean","default","undefined","crossOrigin","errorOverlayUrl","zIndex","className","url","required","custom","bounds","Array","Object","setupImageOverlay","props","leafletRef","context","options","layerOptions","methods","layerMethods","setOpacity","value","setUrl","setBounds","getBounds","getElement","bringToFront","bringToBack","setZIndex"],"sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/@vue-leaflet/vue-leaflet/src/functions/imageOverlay.js"],"sourcesContent":["import { propsToLeafletOptions } from \"../utils\";\nimport { layerProps, setupLayer } from \"./layer\";\n/**\n * @typedef {import('leaflet/dist/leaflet-src.esm.js').LatLngBounds} LatLngBounds\n */\n\nexport const imageOverlayProps = {\n  ...layerProps,\n  opacity: {\n    type: Number,\n  },\n  alt: {\n    type: String,\n  },\n  interactive: {\n    type: Boolean,\n    default: undefined,\n  },\n  crossOrigin: {\n    type: Boolean,\n    default: undefined,\n  },\n  errorOverlayUrl: {\n    type: String,\n  },\n  zIndex: {\n    type: Number,\n  },\n  className: {\n    type: String,\n  },\n  url: {\n    type: String,\n    required: true,\n    custom: true,\n  },\n  bounds: {\n    type: [Array, Object],\n    required: true,\n    custom: true,\n  },\n};\n\nexport const setupImageOverlay = (props, leafletRef, context) => {\n  const { options: layerOptions, methods: layerMethods } = setupLayer(\n    props,\n    leafletRef,\n    context\n  );\n\n  const options = propsToLeafletOptions(props, imageOverlayProps, layerOptions);\n\n  const methods = {\n    ...layerMethods,\n    /**\n     * Sets the opacity of the overlay.\n     * @param {number} opacity\n     */\n    setOpacity(opacity) {\n      return leafletRef.value.setOpacity(opacity);\n    },\n    /**\n     * Changes the URL of the image.\n     * @param {string} url\n     */\n    setUrl(url) {\n      return leafletRef.value.setUrl(url);\n    },\n    /**\n     * Update the bounds that this ImageOverlay covers\n     * @param {LatLngBounds | Array<Array<number>>} bounds\n     */\n    setBounds(bounds) {\n      return leafletRef.value.setBounds(bounds);\n    },\n    /**\n     * Get the bounds that this ImageOverlay covers\n     * @returns {LatLngBounds}\n     */\n    getBounds() {\n      return leafletRef.value.getBounds();\n    },\n    /**\n     * Returns the instance of HTMLImageElement used by this overlay.\n     * @returns {HTMLElement}\n     */\n    getElement() {\n      return leafletRef.value.getElement();\n    },\n    /**\n     * Brings the layer to the top of all overlays.\n     */\n    bringToFront() {\n      return leafletRef.value.bringToFront();\n    },\n    /**\n     * Brings the layer to the bottom of all overlays.\n     */\n    bringToBack() {\n      return leafletRef.value.bringToBack();\n    },\n    /**\n     * Changes the zIndex of the image overlay.\n     * @param {number} zIndex\n     */\n    setZIndex(zIndex) {\n      return leafletRef.value.setZIndex(zIndex);\n    },\n  };\n\n  return { options, methods };\n};\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,UAAU;AAChD,SAASC,UAAU,EAAEC,UAAU,QAAQ,SAAS;AAChD;AACA;AACA;;AAEA,OAAO,MAAMC,iBAAiB,GAAG;EAC/B,GAAGF,UAAU;EACbG,OAAO,EAAE;IACPC,IAAI,EAAEC;EACR,CAAC;EACDC,GAAG,EAAE;IACHF,IAAI,EAAEG;EACR,CAAC;EACDC,WAAW,EAAE;IACXJ,IAAI,EAAEK,OAAO;IACbC,OAAO,EAAEC;EACX,CAAC;EACDC,WAAW,EAAE;IACXR,IAAI,EAAEK,OAAO;IACbC,OAAO,EAAEC;EACX,CAAC;EACDE,eAAe,EAAE;IACfT,IAAI,EAAEG;EACR,CAAC;EACDO,MAAM,EAAE;IACNV,IAAI,EAAEC;EACR,CAAC;EACDU,SAAS,EAAE;IACTX,IAAI,EAAEG;EACR,CAAC;EACDS,GAAG,EAAE;IACHZ,IAAI,EAAEG,MAAM;IACZU,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACV,CAAC;EACDC,MAAM,EAAE;IACNf,IAAI,EAAE,CAACgB,KAAK,EAAEC,MAAM,CAAC;IACrBJ,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACV;AACF,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,KAAK;EAC/D,MAAM;IAAEC,OAAO,EAAEC,YAAY;IAAEC,OAAO,EAAEC;EAAa,CAAC,GAAG5B,UAAU,CACjEsB,KAAK,EACLC,UAAU,EACVC,OAAO,CACR;EAED,MAAMC,OAAO,GAAG3B,qBAAqB,CAACwB,KAAK,EAAErB,iBAAiB,EAAEyB,YAAY,CAAC;EAE7E,MAAMC,OAAO,GAAG;IACd,GAAGC,YAAY;IACf;AACJ;AACA;AACA;IACIC,UAAU,CAAC3B,OAAO,EAAE;MAClB,OAAOqB,UAAU,CAACO,KAAK,CAACD,UAAU,CAAC3B,OAAO,CAAC;IAC7C,CAAC;IACD;AACJ;AACA;AACA;IACI6B,MAAM,CAAChB,GAAG,EAAE;MACV,OAAOQ,UAAU,CAACO,KAAK,CAACC,MAAM,CAAChB,GAAG,CAAC;IACrC,CAAC;IACD;AACJ;AACA;AACA;IACIiB,SAAS,CAACd,MAAM,EAAE;MAChB,OAAOK,UAAU,CAACO,KAAK,CAACE,SAAS,CAACd,MAAM,CAAC;IAC3C,CAAC;IACD;AACJ;AACA;AACA;IACIe,SAAS,GAAG;MACV,OAAOV,UAAU,CAACO,KAAK,CAACG,SAAS,EAAE;IACrC,CAAC;IACD;AACJ;AACA;AACA;IACIC,UAAU,GAAG;MACX,OAAOX,UAAU,CAACO,KAAK,CAACI,UAAU,EAAE;IACtC,CAAC;IACD;AACJ;AACA;IACIC,YAAY,GAAG;MACb,OAAOZ,UAAU,CAACO,KAAK,CAACK,YAAY,EAAE;IACxC,CAAC;IACD;AACJ;AACA;IACIC,WAAW,GAAG;MACZ,OAAOb,UAAU,CAACO,KAAK,CAACM,WAAW,EAAE;IACvC,CAAC;IACD;AACJ;AACA;AACA;IACIC,SAAS,CAACxB,MAAM,EAAE;MAChB,OAAOU,UAAU,CAACO,KAAK,CAACO,SAAS,CAACxB,MAAM,CAAC;IAC3C;EACF,CAAC;EAED,OAAO;IAAEY,OAAO;IAAEE;EAAQ,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}