{"ast":null,"code":"import { onMounted, ref, inject, nextTick } from \"vue\";\nimport { remapEvents, propsBinder, WINDOW_OR_GLOBAL, GLOBAL_LEAFLET_OPT } from \"../utils.js\";\nimport { rectangleProps, setupRectangle } from \"../functions/rectangle\";\nimport { render } from \"../functions/layer\";\n\n/**\n * Rectangle component, lets you add and customize rectangular regions on the map\n */\nexport default {\n  name: \"LRectangle\",\n  props: rectangleProps,\n  setup(props, context) {\n    const leafletRef = ref({});\n    const ready = ref(false);\n    const useGlobalLeaflet = inject(GLOBAL_LEAFLET_OPT);\n    const addLayer = inject(\"addLayer\");\n    const {\n      options,\n      methods\n    } = setupRectangle(props, leafletRef, context);\n    onMounted(async () => {\n      const {\n        rectangle,\n        latLngBounds,\n        DomEvent\n      } = useGlobalLeaflet ? WINDOW_OR_GLOBAL.L : await import(\"leaflet/dist/leaflet-src.esm\");\n      const bounds = props.bounds && props.bounds.length ? latLngBounds(props.bounds) : latLngBounds(props.latLngs);\n      leafletRef.value = rectangle(bounds, options);\n      const listeners = remapEvents(context.attrs);\n      DomEvent.on(leafletRef.value, listeners);\n      propsBinder(methods, leafletRef.value, props);\n      addLayer({\n        ...props,\n        ...methods,\n        leafletObject: leafletRef.value\n      });\n      ready.value = true;\n      nextTick(() => context.emit(\"ready\", leafletRef.value));\n    });\n    return {\n      ready,\n      leafletObject: leafletRef\n    };\n  },\n  render() {\n    return render(this.ready, this.$slots);\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,QAAO,QAAS,KAAK;AACtD,SACEC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,kBAAkB,QACb,aAAa;AACpB,SAASC,cAAc,EAAEC,cAAa,QAAS,wBAAwB;AACvE,SAASC,MAAK,QAAS,oBAAoB;;AAE3C;;;AAGA,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAEJ,cAAc;EACrBK,KAAK,CAACD,KAAK,EAAEE,OAAO,EAAE;IACpB,MAAMC,UAAS,GAAId,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAMe,KAAI,GAAIf,GAAG,CAAC,KAAK,CAAC;IAExB,MAAMgB,gBAAe,GAAIf,MAAM,CAACK,kBAAkB,CAAC;IACnD,MAAMW,QAAO,GAAIhB,MAAM,CAAC,UAAU,CAAC;IAEnC,MAAM;MAAEiB,OAAO;MAAEC;IAAQ,IAAIX,cAAc,CAACG,KAAK,EAAEG,UAAU,EAAED,OAAO,CAAC;IAEvEd,SAAS,CAAC,YAAY;MACpB,MAAM;QAAEqB,SAAS;QAAEC,YAAY;QAAEC;MAAS,IAAIN,gBAAe,GACzDX,gBAAgB,CAACkB,IACjB,MAAM,MAAM,CAAC,8BAA8B,CAAC;MAEhD,MAAMC,MAAK,GACTb,KAAK,CAACa,MAAK,IAAKb,KAAK,CAACa,MAAM,CAACC,MAAK,GAC9BJ,YAAY,CAACV,KAAK,CAACa,MAAM,IACzBH,YAAY,CAACV,KAAK,CAACe,OAAO,CAAC;MACjCZ,UAAU,CAACa,KAAI,GAAIP,SAAS,CAACI,MAAM,EAAEN,OAAO,CAAC;MAE7C,MAAMU,SAAQ,GAAIzB,WAAW,CAACU,OAAO,CAACgB,KAAK,CAAC;MAC5CP,QAAQ,CAACQ,EAAE,CAAChB,UAAU,CAACa,KAAK,EAAEC,SAAS,CAAC;MAExCxB,WAAW,CAACe,OAAO,EAAEL,UAAU,CAACa,KAAK,EAAEhB,KAAK,CAAC;MAE7CM,QAAQ,CAAC;QACP,GAAGN,KAAK;QACR,GAAGQ,OAAO;QACVY,aAAa,EAAEjB,UAAU,CAACa;MAC5B,CAAC,CAAC;MACFZ,KAAK,CAACY,KAAI,GAAI,IAAI;MAClBzB,QAAQ,CAAC,MAAMW,OAAO,CAACmB,IAAI,CAAC,OAAO,EAAElB,UAAU,CAACa,KAAK,CAAC,CAAC;IACzD,CAAC,CAAC;IAEF,OAAO;MAAEZ,KAAK;MAAEgB,aAAa,EAAEjB;IAAW,CAAC;EAC7C,CAAC;EACDL,MAAM,GAAG;IACP,OAAOA,MAAM,CAAC,IAAI,CAACM,KAAK,EAAE,IAAI,CAACkB,MAAM,CAAC;EACxC;AACF,CAAC","names":["onMounted","ref","inject","nextTick","remapEvents","propsBinder","WINDOW_OR_GLOBAL","GLOBAL_LEAFLET_OPT","rectangleProps","setupRectangle","render","name","props","setup","context","leafletRef","ready","useGlobalLeaflet","addLayer","options","methods","rectangle","latLngBounds","DomEvent","L","bounds","length","latLngs","value","listeners","attrs","on","leafletObject","emit","$slots"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/@vue-leaflet/vue-leaflet/src/components/LRectangle.vue"],"sourcesContent":["<script>\nimport { onMounted, ref, inject, nextTick } from \"vue\";\nimport {\n  remapEvents,\n  propsBinder,\n  WINDOW_OR_GLOBAL,\n  GLOBAL_LEAFLET_OPT,\n} from \"../utils.js\";\nimport { rectangleProps, setupRectangle } from \"../functions/rectangle\";\nimport { render } from \"../functions/layer\";\n\n/**\n * Rectangle component, lets you add and customize rectangular regions on the map\n */\nexport default {\n  name: \"LRectangle\",\n  props: rectangleProps,\n  setup(props, context) {\n    const leafletRef = ref({});\n    const ready = ref(false);\n\n    const useGlobalLeaflet = inject(GLOBAL_LEAFLET_OPT);\n    const addLayer = inject(\"addLayer\");\n\n    const { options, methods } = setupRectangle(props, leafletRef, context);\n\n    onMounted(async () => {\n      const { rectangle, latLngBounds, DomEvent } = useGlobalLeaflet\n        ? WINDOW_OR_GLOBAL.L\n        : await import(\"leaflet/dist/leaflet-src.esm\");\n\n      const bounds =\n        props.bounds && props.bounds.length\n          ? latLngBounds(props.bounds)\n          : latLngBounds(props.latLngs);\n      leafletRef.value = rectangle(bounds, options);\n\n      const listeners = remapEvents(context.attrs);\n      DomEvent.on(leafletRef.value, listeners);\n\n      propsBinder(methods, leafletRef.value, props);\n\n      addLayer({\n        ...props,\n        ...methods,\n        leafletObject: leafletRef.value,\n      });\n      ready.value = true;\n      nextTick(() => context.emit(\"ready\", leafletRef.value));\n    });\n\n    return { ready, leafletObject: leafletRef };\n  },\n  render() {\n    return render(this.ready, this.$slots);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}