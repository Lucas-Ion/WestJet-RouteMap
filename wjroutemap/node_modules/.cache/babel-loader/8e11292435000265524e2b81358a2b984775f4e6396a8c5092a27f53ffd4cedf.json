{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"1000px\",\n    \"width\": \"1300px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  style: {\n    \"height\": \"1000px\",\n    \"width\": \"1300px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;EACOA,KAAmC,EAAnC;IAAA;IAAA;EAAA;AAAmC;gCACtCC,oBAAwD;EAAnDC,EAAE,EAAC,KAAK;EAACF,KAAmC,EAAnC;IAAA;IAAA;EAAA;;oBAAdG,UAAwD;;uBAD1DC,oBAGM,OAHNC,UAGM","names":["style","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<template>\n  <div style=\"height:1000px; width:1300px\">\n    <div id=\"map\" style=\"height:1000px; width:1300px\"></div>\n\n  </div>\n</template>\n  \n<script>\n  import \"leaflet/dist/leaflet.css\";\n  import * as L from 'leaflet';\n  import 'leaflet.markercluster';\n  import 'leaflet.markercluster/dist/MarkerCluster.css';\n  import 'leaflet.markercluster/dist/MarkerCluster.Default.css'\n\n  import westjet from '../assets/westjet.png';\n  export default {\n    name: 'DestMap',\n    props: {\n      dests: Array\n    },\n    // components: {\n    //   LMap,\n    //   LTileLayer,\n    //   LMarker,\n    //   LIcon,\n    //   LTooltip,\n    // },\n    data() {\n      return {\n        url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n        attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        zoom: 4,\n        center: [47.313220, -1.319482], //default\n        markerLatLngBob: [47.313220, -17.319482],\n        icon: westjet,\n        iconSize: [85, 50],\n        searchQuery: '',\n        noWrap: true,\n        \n      };\n    },\n    methods: {\n      latLng: function(lat, lng) {\n        return [lat, lng]\n      },\n      getLocation: function() {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position) => {\n            var latitude = position.coords.latitude;\n            var longitude = position.coords.longitude;\n            this.center = [latitude, longitude]\n          });\n        }\n      },\n      search(searchQuery, dests) {\n        for(var index in dests)\n        {\n          var search = searchQuery.toLowerCase()\n          var destination = dests[index].name.toLowerCase()\n          if(destination.includes(search)) // search centers at the first substring result\n          {\n            this.center = [dests[index].latitude, dests[index].longitude]\n            return;\n          }\n        }\n      },\n      openPopup: async function(e) {\n        let marker = e.target\n        let dest = marker.options.dest\n        //console.log(marker.options.dest.code)\n        const price = await this.getPrice(dest.code);\n\n        let popupContent = `<h1 class ='display-6 text-center'> ${dest.name} <br> Price: $${price} </h1>' <br>`;\n        console.log(dest)\n        // let imageSource = `<img src=\"https://www.westjet.com/assets/wj-web/images/en/destination-defaults/square/${dest.code.toLowerCase()}-square.jpg\" class=\"rounded float-start\" alt=\"...\"> </img>`\n        console.log(imageSource)\n        popupContent = popupContent +  imageSource\n        // + '<br>' + \"<img src='\" + \n        // 'https://images.unsplash.com/photo-1493134799591-2c9eed26201a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2l0eSUyMHNreWxpbmV8ZW58MHx8MHx8&w=1000&q=80' + \"'/>\";\n        marker.unbindPopup().bindPopup(popupContent,\n        \n         {maxWidth: \"auto\", maxHeight: \"auto\"},\n        \n        \n        \n        \n        ).openPopup();\n\n      },\n      getPrice: async function (destination) {\n \n        let route = \"YYC\"+ destination\n\n        const axios = require('axios');\n\n        let price = \"\"\n\n        const params = new URLSearchParams();\n        params.append('o', 'YYC');\n        params.append('d', destination);\n        params.append('rangeStartOffset', '0');\n        params.append('rangeEndOffset', '60');\n\n        try{\n          const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n            params: params,\n            headers: {\n              'accept': 'application/json'\n            }\n          });\n          price = response.data[route][0].price;\n          if(response.data[route][0].status === \"NO_SCHEDULES\"){\n            console.log(\"h\")\n            price = \"This is a seasonal route that is currently not being served.\"\n          }\n        } catch(error) {\n          console.log(error);\n          price = \"No price available.\";\n        }\n        console.log(price)\n        return price;\n      },\n      createMarker(dest) {\n        let wjIcon = L.icon({\n          iconUrl: this.icon,\n          iconSize: this.iconSize\n        });\n        //<l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n        let marker = L.marker(this.latLng(dest.latitude, dest.longitude), {icon: wjIcon, dest: dest});\n        marker.bindTooltip(\"12\" ,{\n        permanent: true, \n        direction: 'top',\n        offset: [0,-17],\n    });\n        marker.on('click', this.openPopup)\n        marker.bindTooltip(`${dest.name}, ${dest.countryName}`)\n      \n        return marker;\n      },\n\n\n      customTip() {\n    this.unbindTooltip();\n    if(!this.isPopupOpen()) this.bindTooltip('Short description').openTooltip();\n    },\n\n     customPop() {\n    this.unbindTooltip();\n    }\n      \n    },\n    mounted() {\n\n      this.getLocation();\n      \n      var map = L.map(\"map\").setView([47.313220, -1.319482], 4);\n      \n\n\n      L.tileLayer(\n        'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n        {\n          minZoom: 4,\n          maxZoom: 8,\n          attribution: 'Maps <a href=&copy; https://www.thunderforest.com/>Thunderforest</a>, Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap Contributors</a>',\n          \n          \n        }\n      ).addTo(map);\n      \n      let markers = L.markerClusterGroup();\n\n      // create a marker for each airport\n      for(let dest of this.dests) {\n    \n        let marker = this.createMarker(dest)\n        markers.addLayer(marker)\n\n      }\n\n      map.addLayer(markers);\n      map.setMaxBounds(  [[-90,-180],   [90,180]]  )\n    }\n  };\n</script>\n  \n<style>\n  .leaflet-container {\n    border-radius: 25px;\n  }\n\n  .search-overlay {\n    position: absolute;\n    top: 0;\n    left: -100px;\n    width: 75%;\n    height: 12%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n  }\n\n  input[type=\"text\"] {\n    padding: 10px;\n    border-radius: 5px;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    background-color: white;\n    width: 50%;\n  }\n\n</style>\n\n    \n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}