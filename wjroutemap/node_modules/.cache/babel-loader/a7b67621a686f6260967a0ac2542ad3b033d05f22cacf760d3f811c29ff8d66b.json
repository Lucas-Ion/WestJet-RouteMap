{"ast":null,"code":"import { onMounted, ref, inject, nextTick, h } from \"vue\";\nimport { propsBinder, remapEvents, WINDOW_OR_GLOBAL, GLOBAL_LEAFLET_OPT, propsToLeafletOptions } from \"../utils\";\nimport { iconProps } from \"../functions/icon\";\nimport { componentProps, setupComponent } from \"../functions/component\";\n\n/**\n * Icon component, lets you add and custom icons to the map\n */\nexport default {\n  name: \"LIcon\",\n  props: {\n    ...iconProps,\n    ...componentProps\n  },\n  setup(props, context) {\n    const root = ref(null);\n    const useGlobalLeaflet = inject(GLOBAL_LEAFLET_OPT);\n    const canSetParentHtml = inject(\"canSetParentHtml\");\n    const setParentHtml = inject(\"setParentHtml\");\n    const setIcon = inject(\"setIcon\");\n    let onDomEvent;\n    let offDomEvent;\n    let divIcon;\n    let icon;\n    let iconObject = undefined;\n    const createIcon = (el, recreationNeeded, htmlSwapNeeded) => {\n      const elHtml = el && el.innerHTML;\n      if (!recreationNeeded) {\n        if (htmlSwapNeeded && iconObject && canSetParentHtml()) {\n          setParentHtml(elHtml);\n        }\n        return;\n      }\n      const listeners = remapEvents(context.attrs);\n      if (iconObject) {\n        offDomEvent(iconObject, listeners);\n      }\n      const {\n        options: componentOptions\n      } = setupComponent(props);\n      const options = propsToLeafletOptions(props, iconProps, componentOptions);\n      if (elHtml) {\n        options.html = elHtml;\n      }\n      iconObject = options.html ? divIcon(options) : icon(options);\n      onDomEvent(iconObject, listeners);\n      setIcon(iconObject);\n    };\n    const scheduleCreateIcon = () => {\n      nextTick(() => createIcon(root.value, true, false));\n    };\n    const scheduleHtmlSwap = () => {\n      nextTick(() => createIcon(root.value, false, true));\n    };\n    const methods = {\n      setIconUrl: scheduleCreateIcon,\n      setIconRetinaUrl: scheduleCreateIcon,\n      setIconSize: scheduleCreateIcon,\n      setIconAnchor: scheduleCreateIcon,\n      setPopupAnchor: scheduleCreateIcon,\n      setTooltipAnchor: scheduleCreateIcon,\n      setShadowUrl: scheduleCreateIcon,\n      setShadowRetinaUrl: scheduleCreateIcon,\n      setShadowAnchor: scheduleCreateIcon,\n      setBgPos: scheduleCreateIcon,\n      setClassName: scheduleCreateIcon,\n      setHtml: scheduleCreateIcon\n    };\n    onMounted(async () => {\n      const {\n        DomEvent,\n        divIcon: lDivIcon,\n        icon: lIcon\n      } = useGlobalLeaflet ? WINDOW_OR_GLOBAL.L : await import(\"leaflet/dist/leaflet-src.esm\");\n      onDomEvent = DomEvent.on;\n      offDomEvent = DomEvent.off;\n      divIcon = lDivIcon;\n      icon = lIcon;\n      propsBinder(methods, {}, props);\n      const observer = new MutationObserver(scheduleHtmlSwap);\n      observer.observe(root.value, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n      scheduleCreateIcon();\n    });\n    return {\n      root\n    };\n  },\n  render() {\n    const content = this.$slots.default ? this.$slots.default() : undefined;\n    return h(\"div\", {\n      ref: \"root\"\n    }, content);\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","ref","inject","nextTick","h","propsBinder","remapEvents","WINDOW_OR_GLOBAL","GLOBAL_LEAFLET_OPT","propsToLeafletOptions","iconProps","componentProps","setupComponent","name","props","setup","context","root","useGlobalLeaflet","canSetParentHtml","setParentHtml","setIcon","onDomEvent","offDomEvent","divIcon","icon","iconObject","undefined","createIcon","el","recreationNeeded","htmlSwapNeeded","elHtml","innerHTML","listeners","attrs","options","componentOptions","html","scheduleCreateIcon","value","scheduleHtmlSwap","methods","setIconUrl","setIconRetinaUrl","setIconSize","setIconAnchor","setPopupAnchor","setTooltipAnchor","setShadowUrl","setShadowRetinaUrl","setShadowAnchor","setBgPos","setClassName","setHtml","DomEvent","lDivIcon","lIcon","L","on","off","observer","MutationObserver","observe","attributes","childList","characterData","subtree","render","content","$slots","default"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/@vue-leaflet/vue-leaflet/src/components/LIcon.vue"],"sourcesContent":["<script>\nimport { onMounted, ref, inject, nextTick, h } from \"vue\";\nimport {\n  propsBinder,\n  remapEvents,\n  WINDOW_OR_GLOBAL,\n  GLOBAL_LEAFLET_OPT,\n  propsToLeafletOptions,\n} from \"../utils\";\nimport { iconProps } from \"../functions/icon\";\nimport { componentProps, setupComponent } from \"../functions/component\";\n\n/**\n * Icon component, lets you add and custom icons to the map\n */\nexport default {\n  name: \"LIcon\",\n  props: {\n    ...iconProps,\n    ...componentProps,\n  },\n  setup(props, context) {\n    const root = ref(null);\n\n    const useGlobalLeaflet = inject(GLOBAL_LEAFLET_OPT);\n    const canSetParentHtml = inject(\"canSetParentHtml\");\n    const setParentHtml = inject(\"setParentHtml\");\n    const setIcon = inject(\"setIcon\");\n\n    let onDomEvent;\n    let offDomEvent;\n    let divIcon;\n    let icon;\n    let iconObject = undefined;\n\n    const createIcon = (el, recreationNeeded, htmlSwapNeeded) => {\n      const elHtml = el && el.innerHTML;\n      if (!recreationNeeded) {\n        if (htmlSwapNeeded && iconObject && canSetParentHtml()) {\n          setParentHtml(elHtml);\n        }\n        return;\n      }\n\n      const listeners = remapEvents(context.attrs);\n      if (iconObject) {\n        offDomEvent(iconObject, listeners);\n      }\n\n      const { options: componentOptions } = setupComponent(props);\n      const options = propsToLeafletOptions(props, iconProps, componentOptions);\n      if (elHtml) {\n        options.html = elHtml;\n      }\n\n      iconObject = options.html ? divIcon(options) : icon(options);\n      onDomEvent(iconObject, listeners);\n      setIcon(iconObject);\n    };\n\n    const scheduleCreateIcon = () => {\n      nextTick(() => createIcon(root.value, true, false));\n    };\n\n    const scheduleHtmlSwap = () => {\n      nextTick(() => createIcon(root.value, false, true));\n    };\n\n    const methods = {\n      setIconUrl: scheduleCreateIcon,\n      setIconRetinaUrl: scheduleCreateIcon,\n      setIconSize: scheduleCreateIcon,\n      setIconAnchor: scheduleCreateIcon,\n      setPopupAnchor: scheduleCreateIcon,\n      setTooltipAnchor: scheduleCreateIcon,\n      setShadowUrl: scheduleCreateIcon,\n      setShadowRetinaUrl: scheduleCreateIcon,\n      setShadowAnchor: scheduleCreateIcon,\n      setBgPos: scheduleCreateIcon,\n      setClassName: scheduleCreateIcon,\n      setHtml: scheduleCreateIcon,\n    };\n\n    onMounted(async () => {\n      const { DomEvent, divIcon: lDivIcon, icon: lIcon } = useGlobalLeaflet\n        ? WINDOW_OR_GLOBAL.L\n        : await import(\"leaflet/dist/leaflet-src.esm\");\n\n      onDomEvent = DomEvent.on;\n      offDomEvent = DomEvent.off;\n      divIcon = lDivIcon;\n      icon = lIcon;\n\n      propsBinder(methods, {}, props);\n\n      const observer = new MutationObserver(scheduleHtmlSwap);\n      observer.observe(root.value, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true,\n      });\n      scheduleCreateIcon();\n    });\n\n    return { root };\n  },\n  render() {\n    const content = this.$slots.default ? this.$slots.default() : undefined;\n    return h(\"div\", { ref: \"root\" }, content);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}