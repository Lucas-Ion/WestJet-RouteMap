{"ast":null,"code":"import \"leaflet/dist/leaflet.css\";\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport westjet from '../assets/westjet.png';\nexport default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  // components: {\n  //   LMap,\n  //   LTileLayer,\n  //   LMarker,\n  //   LIcon,\n  //   LTooltip,\n  // },\n  data() {\n    return {\n      url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482],\n      //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [85, 50],\n      searchQuery: '',\n      noWrap: true\n    };\n  },\n  methods: {\n    latLng: function (lat, lng) {\n      return [lat, lng];\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude];\n        });\n      }\n    },\n    search(searchQuery, dests) {\n      for (var index in dests) {\n        var search = searchQuery.toLowerCase();\n        var destination = dests[index].name.toLowerCase();\n        if (destination.includes(search))\n          // search centers at the first substring result\n          {\n            this.center = [dests[index].latitude, dests[index].longitude];\n            return;\n          }\n      }\n    },\n    openPopup: async function (e) {\n      let marker = e.target;\n      let dest = marker.options.dest;\n      //console.log(marker.options.dest.code)\n      const price = await this.getPrice(dest.code);\n      let popupContent = `You have selected ${dest.name}'s airport <br> Price: $${price}`;\n      marker.unbindPopup().bindPopup(popupContent).openPopup();\n    },\n    getPrice: async function (destination) {\n      let route = \"YYC\" + destination;\n      const axios = require('axios');\n      let price = \"\";\n      const params = new URLSearchParams();\n      params.append('o', 'YYC');\n      params.append('d', destination);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n      try {\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n        if (response.data[route][0].status === \"NO_SCHEDULES\") {\n          console.log(\"h\");\n          price = \"This is a seasonal route that is currently not being served.\";\n        }\n      } catch (error) {\n        console.log(error);\n        price = \"No price available.\";\n      }\n      console.log(price);\n      return price;\n    },\n    createMarker(dest) {\n      let wjIcon = L.icon({\n        iconUrl: this.icon,\n        iconSize: this.iconSize\n      });\n      //<l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n      let marker = L.marker(this.latLng(dest.latitude, dest.longitude), {\n        icon: wjIcon,\n        dest: dest\n      });\n      marker.bindTooltip(\"12\", {\n        permanent: true,\n        direction: 'top',\n        offset: [0, -17]\n      });\n      marker.on('click', this.openPopup);\n      marker.bindTooltip(`${dest.name}, ${dest.countryName}`);\n      return marker;\n    }\n  },\n  mounted() {\n    this.getLocation();\n    var map = L.map(\"map\").setView([47.313220, -1.319482], 4);\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png', {\n      minZoom: 4,\n      maxZoom: 8,\n      attribution: 'Maps <a href=&copy; https://www.thunderforest.com/>Thunderforest</a>, Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap Contributors</a>',\n      noWrap: true,\n      bounds: maxBounds()\n    }).addTo(map);\n    let markers = L.markerClusterGroup();\n\n    // create a marker for each airport\n    for (let dest of this.dests) {\n      let marker = this.createMarker(dest);\n      markers.addLayer(marker);\n    }\n    map.addLayer(markers);\n    map.setMaxBounds(map.getBounds() * 1.1);\n  }\n};","map":{"version":3,"mappings":"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","names":["L","westjet","name","props","dests","Array","data","url","attribution","zoom","center","markerLatLngBob","icon","iconSize","searchQuery","noWrap","methods","latLng","lat","lng","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","search","index","toLowerCase","destination","includes","openPopup","e","marker","target","dest","options","price","getPrice","code","popupContent","unbindPopup","bindPopup","route","axios","require","params","URLSearchParams","append","response","get","headers","status","console","log","error","createMarker","wjIcon","iconUrl","bindTooltip","permanent","direction","offset","on","countryName","mounted","map","setView","tileLayer","minZoom","maxZoom","bounds","maxBounds","addTo","markers","markerClusterGroup","addLayer","setMaxBounds","getBounds"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<template>\n  <div style=\"height:1000px; width:1300px\">\n    <div id=\"map\" style=\"height:1000px; width:1300px\"></div>\n    <!-- <l-map ref=\"map\" :zoom=\"zoom\" :center=\"center\" maxZoom=\"7\" minZoom=\"4\">\n      <div class=\"search-overlay\">\n        <input type=\"text\" placeholder=\"Search\" v-model=\"searchQuery\" @keyup.enter=\"search(searchQuery, dests)\">\n      </div>\n      <l-tile-layer url=\"https://tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db\" layer-type=\"base\" name=\"OpenStreetMap\"></l-tile-layer>\n      <l-marker ref=\"markers\" :key=\"index\" v-for=\"(dest, index) in dests\" :lat-lng=\"latLng(dest.latitude, dest.longitude)\" @click=\"openPopup(dest, index)\">\n        <l-icon :icon-size=\"iconSize\" :icon-url=\"icon\"></l-icon>\n        <l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n      </l-marker>\n    </l-map> -->\n  </div>\n</template>\n  \n<script>\n  import \"leaflet/dist/leaflet.css\";\n  import * as L from 'leaflet';\n  import 'leaflet.markercluster';\n  import 'leaflet.markercluster/dist/MarkerCluster.css';\n  import 'leaflet.markercluster/dist/MarkerCluster.Default.css'\n\n  import westjet from '../assets/westjet.png';\n  export default {\n    name: 'DestMap',\n    props: {\n      dests: Array\n    },\n    // components: {\n    //   LMap,\n    //   LTileLayer,\n    //   LMarker,\n    //   LIcon,\n    //   LTooltip,\n    // },\n    data() {\n      return {\n        url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n        attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        zoom: 4,\n        center: [47.313220, -1.319482], //default\n        markerLatLngBob: [47.313220, -17.319482],\n        icon: westjet,\n        iconSize: [85, 50],\n        searchQuery: '',\n        noWrap: true,\n        \n      };\n    },\n    methods: {\n      latLng: function(lat, lng) {\n        return [lat, lng]\n      },\n      getLocation: function() {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position) => {\n            var latitude = position.coords.latitude;\n            var longitude = position.coords.longitude;\n            this.center = [latitude, longitude]\n          });\n        }\n      },\n      search(searchQuery, dests) {\n        for(var index in dests)\n        {\n          var search = searchQuery.toLowerCase()\n          var destination = dests[index].name.toLowerCase()\n          if(destination.includes(search)) // search centers at the first substring result\n          {\n            this.center = [dests[index].latitude, dests[index].longitude]\n            return;\n          }\n        }\n      },\n      openPopup: async function(e) {\n        let marker = e.target\n        let dest = marker.options.dest\n        //console.log(marker.options.dest.code)\n        const price = await this.getPrice(dest.code);\n\n        let popupContent = `You have selected ${dest.name}'s airport <br> Price: $${price}`;\n        marker.unbindPopup().bindPopup(popupContent).openPopup();\n\n      },\n      getPrice: async function (destination) {\n \n        let route = \"YYC\"+ destination\n\n        const axios = require('axios');\n\n        let price = \"\"\n\n        const params = new URLSearchParams();\n        params.append('o', 'YYC');\n        params.append('d', destination);\n        params.append('rangeStartOffset', '0');\n        params.append('rangeEndOffset', '60');\n\n        try{\n          const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n            params: params,\n            headers: {\n              'accept': 'application/json'\n            }\n          });\n          price = response.data[route][0].price;\n          if(response.data[route][0].status === \"NO_SCHEDULES\"){\n            console.log(\"h\")\n            price = \"This is a seasonal route that is currently not being served.\"\n          }\n        } catch(error) {\n          console.log(error);\n          price = \"No price available.\";\n        }\n        console.log(price)\n        return price;\n      },\n      createMarker(dest) {\n        let wjIcon = L.icon({\n          iconUrl: this.icon,\n          iconSize: this.iconSize\n        });\n        //<l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n        let marker = L.marker(this.latLng(dest.latitude, dest.longitude), {icon: wjIcon, dest: dest});\n        marker.bindTooltip(\"12\" ,{\n        permanent: true, \n        direction: 'top',\n        offset: [0,-17],\n    });\n        marker.on('click', this.openPopup)\n        marker.bindTooltip(`${dest.name}, ${dest.countryName}`)\n      \n        return marker;\n      }\n    },\n    mounted() {\n\n      this.getLocation();\n      \n      var map = L.map(\"map\").setView([47.313220, -1.319482], 4);\n      \n\n\n      L.tileLayer(\n        'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n        {\n          minZoom: 4,\n          maxZoom: 8,\n          attribution: 'Maps <a href=&copy; https://www.thunderforest.com/>Thunderforest</a>, Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap Contributors</a>',\n          noWrap: true,\n          bounds: maxBounds()\n        }\n      ).addTo(map);\n      \n      let markers = L.markerClusterGroup();\n\n      // create a marker for each airport\n      for(let dest of this.dests) {\n    \n        let marker = this.createMarker(dest)\n        markers.addLayer(marker)\n\n      }\n\n      map.addLayer(markers);\n      map.setMaxBounds(map.getBounds()*1.1);\n    }\n  };\n</script>\n  \n<style>\n  .leaflet-container {\n    border-radius: 25px;\n  }\n\n  .search-overlay {\n    position: absolute;\n    top: 0;\n    left: -100px;\n    width: 75%;\n    height: 12%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n  }\n\n  input[type=\"text\"] {\n    padding: 10px;\n    border-radius: 5px;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    background-color: white;\n    width: 50%;\n  }\n\n</style>\n\n    \n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}