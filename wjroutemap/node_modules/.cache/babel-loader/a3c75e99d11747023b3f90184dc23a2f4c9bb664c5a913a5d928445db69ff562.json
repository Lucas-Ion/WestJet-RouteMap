{"ast":null,"code":"import \"leaflet/dist/leaflet.css\";\nimport { LMap, LTileLayer, LMarker, LIcon, LTooltip } from \"@vue-leaflet/vue-leaflet\";\nimport westjet from '../assets/westjet.png';\nexport default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LIcon,\n    LTooltip\n  },\n  data() {\n    return {\n      url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      zoom: 4,\n      center: [47.313220, -1.319482],\n      //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [40, 25],\n      searchQuery: ''\n    };\n  },\n  methods: {\n    latLng: function (lat, lng) {\n      return [lat, lng];\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude];\n        });\n      }\n    },\n    search(searchQuery, dests) {\n      for (var index in dests) {\n        var search = searchQuery.toLowerCase();\n        var destination = dests[index].name.toLowerCase();\n        if (destination.includes(search))\n          // search centers at the first substring result\n          {\n            this.center = [dests[index].latitude, dests[index].longitude];\n            return;\n          }\n      }\n    },\n    openPopup: async function (dest, index) {\n      let marker = this.$refs.markers[index].leafletObject;\n      const price = await this.getPrice(dest.code);\n      let popupContent = `You have selected ${dest.name}'s airport <br> Price: ${price}`;\n      marker.unbindPopup().bindPopup(popupContent).openPopup();\n    },\n    getPrice: async function (destination) {\n      let route = \"YYC\" + destination;\n      const axios = require('axios');\n      let price = \"\";\n      const params = new URLSearchParams();\n      params.append('o', 'YYC');\n      params.append('d', destination);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n      try {\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n      } catch (error) {\n        console.log(error);\n        price = \"No price available.\";\n      }\n      return price;\n    }\n  },\n  mounted() {\n    this.getLocation();\n  }\n};","map":{"version":3,"mappings":"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","names":["LMap","LTileLayer","LMarker","LIcon","LTooltip","westjet","name","props","dests","Array","components","data","url","attribution","zoom","center","markerLatLngBob","icon","iconSize","searchQuery","methods","latLng","lat","lng","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","search","index","toLowerCase","destination","includes","openPopup","dest","marker","$refs","markers","leafletObject","price","getPrice","code","popupContent","unbindPopup","bindPopup","route","axios","require","params","URLSearchParams","append","response","get","headers","error","console","log","mounted"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<template>\n  <div style=\"height:1000px; width:1300px\">\n    <l-map ref=\"map\" :zoom=\"zoom\" :center=\"center\" maxZoom=\"7\" minZoom=\"4\">\n      <div class=\"search-overlay\">\n        <input type=\"text\" placeholder=\"Search\" v-model=\"searchQuery\" @keyup.enter=\"search(searchQuery, dests)\">\n      </div>\n      <l-tile-layer url=\"https://tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db\" layer-type=\"base\" name=\"OpenStreetMap\"></l-tile-layer>\n      <l-marker ref=\"markers\" :key=\"index\" v-for=\"(dest, index) in dests\" :lat-lng=\"latLng(dest.latitude, dest.longitude)\" @click=\"openPopup(dest, index)\">\n        <l-icon :icon-size=\"iconSize\" :icon-url=\"icon\"></l-icon>\n        <l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n      </l-marker>\n    </l-map>\n  </div>\n</template>\n  \n<script>\n  import \"leaflet/dist/leaflet.css\";\n  import {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LIcon,\n    LTooltip\n  } from \"@vue-leaflet/vue-leaflet\";\n\n  import westjet from '../assets/westjet.png';\n  export default {\n    name: 'DestMap',\n    props: {\n      dests: Array\n    },\n    components: {\n      LMap,\n      LTileLayer,\n      LMarker,\n      LIcon,\n      LTooltip,\n    },\n    data() {\n      return {\n        url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        zoom: 4,\n        center: [47.313220, -1.319482], //default\n        markerLatLngBob: [47.313220, -17.319482],\n        icon: westjet,\n        iconSize: [40, 25],\n        searchQuery: '',\n      };\n    },\n    methods: {\n      latLng: function(lat, lng) {\n        return [lat, lng]\n      },\n      getLocation: function() {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position) => {\n            var latitude = position.coords.latitude;\n            var longitude = position.coords.longitude;\n            this.center = [latitude, longitude]\n          });\n        }\n      },\n      search(searchQuery, dests) {\n        for(var index in dests)\n        {\n          var search = searchQuery.toLowerCase()\n          var destination = dests[index].name.toLowerCase()\n          if(destination.includes(search)) // search centers at the first substring result\n          {\n            this.center = [dests[index].latitude, dests[index].longitude]\n            return;\n          }\n        }\n      },\n      openPopup: async function(dest, index) {\n        let marker = this.$refs.markers[index].leafletObject;\n        \n        const price = await this.getPrice(dest.code);\n\n        let popupContent = `You have selected ${dest.name}'s airport <br> Price: ${price}`;\n        marker.unbindPopup().bindPopup(popupContent).openPopup();\n\n      },\n      getPrice: async function (destination) {\n \n        let route = \"YYC\"+ destination\n\n        const axios = require('axios');\n\n        let price = \"\"\n\n        const params = new URLSearchParams();\n        params.append('o', 'YYC');\n        params.append('d', destination);\n        params.append('rangeStartOffset', '0');\n        params.append('rangeEndOffset', '60');\n\n        try{\n          const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n            params: params,\n            headers: {\n              'accept': 'application/json'\n            }\n          });\n          price = response.data[route][0].price;\n        } catch(error) {\n          console.log(error);\n          price = \"No price available.\";\n        }\n\n        return price;\n      }\n    },\n    mounted() {\n      this.getLocation()\n    }\n  };\n</script>\n  \n<style>\n  .leaflet-container {\n    border-radius: 25px;\n  }\n\n  .search-overlay {\n    position: absolute;\n    top: 0;\n    left: -100px;\n    width: 75%;\n    height: 12%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n  }\n\n  input[type=\"text\"] {\n    padding: 10px;\n    border-radius: 5px;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    background-color: white;\n    width: 50%;\n  }\n\n</style>\n\n    \n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}