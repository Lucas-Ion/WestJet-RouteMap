{"ast":null,"code":"import { propsToLeafletOptions } from \"../utils\";\nimport { pathProps, setupPath } from \"./path\";\nexport const polylineProps = {\n  ...pathProps,\n  smoothFactor: {\n    type: Number\n  },\n  noClip: {\n    type: Boolean,\n    default: undefined\n  },\n  latLngs: {\n    type: Array,\n    required: true,\n    custom: true\n  }\n};\nexport const setupPolyline = (props, leafletRef, context) => {\n  const {\n    options: pathOptions,\n    methods: pathMethods\n  } = setupPath(props, leafletRef, context);\n  const options = propsToLeafletOptions(props, polylineProps, pathOptions);\n  const methods = {\n    ...pathMethods,\n    setSmoothFactor(smoothFactor) {\n      leafletRef.value.setStyle({\n        smoothFactor\n      });\n    },\n    setNoClip(noClip) {\n      leafletRef.value.setStyle({\n        noClip\n      });\n    },\n    addLatLng(latLng) {\n      leafletRef.value.addLatLng(latLng);\n    }\n  };\n  return {\n    options,\n    methods\n  };\n};","map":{"version":3,"names":["propsToLeafletOptions","pathProps","setupPath","polylineProps","smoothFactor","type","Number","noClip","Boolean","default","undefined","latLngs","Array","required","custom","setupPolyline","props","leafletRef","context","options","pathOptions","methods","pathMethods","setSmoothFactor","value","setStyle","setNoClip","addLatLng","latLng"],"sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/@vue-leaflet/vue-leaflet/src/functions/polyline.js"],"sourcesContent":["import { propsToLeafletOptions } from \"../utils\";\nimport { pathProps, setupPath } from \"./path\";\n\nexport const polylineProps = {\n  ...pathProps,\n  smoothFactor: {\n    type: Number,\n  },\n  noClip: {\n    type: Boolean,\n    default: undefined,\n  },\n  latLngs: {\n    type: Array,\n    required: true,\n    custom: true,\n  },\n};\n\nexport const setupPolyline = (props, leafletRef, context) => {\n  const { options: pathOptions, methods: pathMethods } = setupPath(\n    props,\n    leafletRef,\n    context\n  );\n\n  const options = propsToLeafletOptions(props, polylineProps, pathOptions);\n\n  const methods = {\n    ...pathMethods,\n    setSmoothFactor(smoothFactor) {\n      leafletRef.value.setStyle({ smoothFactor });\n    },\n    setNoClip(noClip) {\n      leafletRef.value.setStyle({ noClip });\n    },\n    addLatLng(latLng) {\n      leafletRef.value.addLatLng(latLng);\n    },\n  };\n\n  return { options, methods };\n};\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,UAAU;AAChD,SAASC,SAAS,EAAEC,SAAS,QAAQ,QAAQ;AAE7C,OAAO,MAAMC,aAAa,GAAG;EAC3B,GAAGF,SAAS;EACZG,YAAY,EAAE;IACZC,IAAI,EAAEC;EACR,CAAC;EACDC,MAAM,EAAE;IACNF,IAAI,EAAEG,OAAO;IACbC,OAAO,EAAEC;EACX,CAAC;EACDC,OAAO,EAAE;IACPN,IAAI,EAAEO,KAAK;IACXC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACV;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,KAAK;EAC3D,MAAM;IAAEC,OAAO,EAAEC,WAAW;IAAEC,OAAO,EAAEC;EAAY,CAAC,GAAGpB,SAAS,CAC9Dc,KAAK,EACLC,UAAU,EACVC,OAAO,CACR;EAED,MAAMC,OAAO,GAAGnB,qBAAqB,CAACgB,KAAK,EAAEb,aAAa,EAAEiB,WAAW,CAAC;EAExE,MAAMC,OAAO,GAAG;IACd,GAAGC,WAAW;IACdC,eAAe,CAACnB,YAAY,EAAE;MAC5Ba,UAAU,CAACO,KAAK,CAACC,QAAQ,CAAC;QAAErB;MAAa,CAAC,CAAC;IAC7C,CAAC;IACDsB,SAAS,CAACnB,MAAM,EAAE;MAChBU,UAAU,CAACO,KAAK,CAACC,QAAQ,CAAC;QAAElB;MAAO,CAAC,CAAC;IACvC,CAAC;IACDoB,SAAS,CAACC,MAAM,EAAE;MAChBX,UAAU,CAACO,KAAK,CAACG,SAAS,CAACC,MAAM,CAAC;IACpC;EACF,CAAC;EAED,OAAO;IAAET,OAAO;IAAEE;EAAQ,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}