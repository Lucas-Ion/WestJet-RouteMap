{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"leaflet/dist/leaflet.css\";\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport westjet from '../assets/westjet.png';\nimport { conditionalExpression } from \"@babel/types\";\nexport default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  // components: {\n  //   LMap,\n  //   LTileLayer,\n  //   LMarker,\n  //   LIcon,\n  //   LTooltip,\n  // },\n  data() {\n    return {\n      url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482],\n      //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [85, 50],\n      searchTerm: '',\n      suggestions: [],\n      suggestion: '',\n      showSuggestions: false,\n      placeholderText: 'Location Not Selected',\n      currentLocationAirportCode: 'YYC',\n      noWrap: true,\n      searchQuery: ''\n    };\n  },\n  methods: {\n    updateSuggestions(dests) {\n      var destinations = [];\n      console.log(destinations);\n      for (var index in dests) {\n        destinations.push([dests[index].name, dests[index].countryName]);\n      }\n      this.suggestions = destinations.filter(suggestion => suggestion[0].toLowerCase().startsWith(this.searchTerm.toLowerCase()));\n      // Show the suggestions if there are any.\n      this.showSuggestions = this.suggestions.length > 0;\n    },\n    hideSuggestions() {\n      // Hide the suggestions when the search input loses focus.\n      this.showSuggestions = false;\n    },\n    selectSuggestion(dests, suggestion) {\n      // When a suggestion is clicked, update the search term and hide the suggestions.\n      this.searchTerm = suggestion[0];\n      this.showSuggestions = false;\n      for (var index in dests) {\n        if (dests[index].name === suggestion[0]) {\n          this.center = [dests[index].latitude, dests[index].longitude];\n          this.placeholderText = dests[index].name;\n          this.currentLocationAirportCode = dests[index].code;\n          console.log(this.currentLocationAirportCode);\n        }\n      }\n    },\n    latLng: function (lat, lng) {\n      return [lat, lng];\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude];\n        });\n      }\n    },\n    // openPopup: async function (e) {\n    //   let marker = e.target\n    //   let dest = marker.options.dest\n    //   //console.log(marker.options.dest.code)\n    //   const priceMessage = await this.getPrice(dest);\n\n    //   // let popupContent = `You have selected ${dest.name}'s airport <br> Price: $${price}`;\n    //   marker.unbindPopup().bindPopup(priceMessage).openPopup();\n\n    // },\n    // getPrice: async function (destination) {\n    //   if (destination.code == this.currentLocationAirportCode) {\n    //     return \"This is your current departure location\";\n    //   }\n\n    //   let route = this.currentLocationAirportCode + destination.code;\n\n    //   const axios = require('axios');\n\n    //   let price = \"\";\n    //   let priceMessage = \"\";\n\n    //   const params = new URLSearchParams();\n    //   params.append('o', this.currentLocationAirportCode);\n    //   params.append('d', destination.code);\n    //   params.append('rangeStartOffset', '0');\n    //   params.append('rangeEndOffset', '60');\n\n    //   try {\n    //     const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n    //       params: params,\n    //       headers: {\n    //         'accept': 'application/json'\n    //       }\n    //     });\n    //     price = response.data[route][0].price;\n    //     priceMessage = `You have selected ${destination.name}'s airport <br> Price: $${price}`;\n    //     if (response.data[route][0].status === \"NO_SCHEDULES\") {\n\n    //       priceMessage = \"This is a seasonal route that is currently not being served.\"\n    //     }\n    //   } catch (error) {\n    //     console.log(error);\n    //     priceMessage = \"No price available for this route.\";\n    //   }\n    //   console.log(price)\n    //   return priceMessage;\n    // },\n    // createMarker(dest) {\n    //   let wjIcon = L.icon({\n    //     iconUrl: this.icon,\n    //     iconSize: this.iconSize\n    //   });\n    // },\n\n    search(searchQuery, dests) {\n      for (var index in dests) {\n        var search = searchQuery.toLowerCase();\n        var destination = dests[index].name.toLowerCase();\n        if (destination.includes(search))\n          // search centers at the first substring result\n          {\n            this.center = [dests[index].latitude, dests[index].longitude];\n            return;\n          }\n      }\n    },\n    openPopup: async function (e) {\n      let marker = e.target;\n      let dest = marker.options.dest;\n      //console.log(marker.options.dest.code)\n      const price = await this.getPrice(dest.code);\n      const valid_image = await this.getValidImage(dest.code);\n      let popupContent = `<h1 style=\"font-weight: 200;\"> ${dest.name} <br>  <div\n        style = \" font-size: 1rem; font-weight: 200;\n    font-family: \"Noto Sans\",\"Noto Sans SC\",\"Roboto\",\"Trebuchet MS\",Arial,Sans-Serif;\n    letter-spacing: normal;\n   \n   \n    line-height: 1.2;\"\n    >  From $${price} CAD <div> </h1>  `;\n      console.log(dest);\n      let imageSource = `<img  style=\"border-radius: 10px;\"src=\"https://www.westjet.com/assets/wj-web/images/en/destination-defaults/square/${dest.code.toLowerCase()}-square.jpg\"  width=\"225\" \n       height=\"225\" border-radius: 25px;> </img> <br>`;\n      var date = new Date();\n\n      // Add five days to current date\n      date.setDate(date.getDate() + 30);\n      console.log(date);\n      var MyDate = new Date();\n      var MyDateString;\n      MyDate.setDate(MyDate.getDate() + 30);\n      MyDateString = MyDate.getFullYear() + '-' + ('0' + (MyDate.getMonth() + 1)).slice(-2) + '-' + ('0' + MyDate.getDate()).slice(-2);\n      console.log(MyDateString);\n      let button_book = ` https://www.westjet.com/en-ca/flights/low-fares?origin=YQL&destination=${dest.code}&outbounddate=${MyDateString}`;\n\n      // let button = ` <div class='text-center'> <button type=\"button\" class=\"btn btn-outline-dark mt-3 px-5\">Book Now!</button> </div>`\n      let button = ` <a href=https://www.westjet.com/en-ca/flights/low-fares?origin=YQL&destination=${dest.code}&outbounddate=${MyDateString} class=\"btn btn-outline-dark mt-3 px-5\" role=\"button\" \">Book Now!</a>`;\n      popupContent = popupContent + imageSource + button;\n      // + '<br>' + \"<img src='\" + \n      // 'https://images.unsplash.com/photo-1493134799591-2c9eed26201a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2l0eSUyMHNreWxpbmV8ZW58MHx8MHx8&w=1000&q=80' + \"'/>\";\n      marker.unbindPopup().bindPopup(popupContent, {\n        maxWidth: \"auto\",\n        maxHeight: \"auto\"\n      }).openPopup();\n    },\n    getValidImage: function (dest) {},\n    getPrice: async function (destination) {\n      if (destination.code == this.currentLocationAirportCode) {\n        return \"This is your current departure location\";\n      }\n      let route = this.currentLocationAirportCode + destination.code;\n      console.log(route);\n      const axios = require('axios');\n      let price = \"\";\n      let priceMessage = \"\";\n      const params = new URLSearchParams();\n      params.append('o', this.currentLocationAirportCode);\n      params.append('d', destination.code);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n      try {\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n        priceMessage = `You have selected ${destination.name}'s airport <br> Price: $${price}`;\n        if (response.data[route][0].status === \"NO_SCHEDULES\") {\n          priceMessage = \"This is a seasonal route that is currently not being served.\";\n        }\n      } catch (error) {\n        console.log(error);\n        priceMessage = \"No price available for this route.\";\n      }\n      console.log(price);\n      return priceMessage;\n    },\n    createMarker(dest) {\n      let wjIcon = L.icon({\n        iconUrl: this.icon,\n        iconSize: this.iconSize\n      });\n      //<l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n      let marker = L.marker(this.latLng(dest.latitude, dest.longitude), {\n        icon: wjIcon,\n        dest: dest\n      });\n      marker.bindTooltip(\"12\", {\n        permanent: true,\n        direction: 'top',\n        offset: [0, -17]\n      });\n      marker.on('click', this.openPopup);\n      marker.bindTooltip(`${dest.name}, ${dest.countryName}`);\n      return marker;\n    },\n    customTip() {\n      this.unbindTooltip();\n      if (!this.isPopupOpen()) this.bindTooltip('Short description').openTooltip();\n    },\n    customPop() {\n      this.unbindTooltip();\n    }\n  },\n  mounted() {\n    this.getLocation();\n    var map = L.map(\"map\").setView([47.313220, -1.319482], 4);\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png', {\n      minZoom: 4,\n      maxZoom: 8,\n      attribution: 'Maps <a href=&copy; https://www.thunderforest.com/>Thunderforest</a>, Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap Contributors</a>'\n    }).addTo(map);\n    let markers = L.markerClusterGroup();\n\n    // create a marker for each airport\n    for (let dest of this.dests) {\n      let marker = this.createMarker(dest);\n      markers.addLayer(marker);\n    }\n    map.addLayer(markers);\n    map.setMaxBounds([[-90, -180], [90, 180]]);\n  }\n};","map":{"version":3,"mappings":"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","names":["L","westjet","conditionalExpression","name","props","dests","Array","data","url","attribution","zoom","center","markerLatLngBob","icon","iconSize","searchTerm","suggestions","suggestion","showSuggestions","placeholderText","currentLocationAirportCode","noWrap","searchQuery","methods","updateSuggestions","destinations","console","log","index","push","countryName","filter","toLowerCase","startsWith","length","hideSuggestions","selectSuggestion","latitude","longitude","code","latLng","lat","lng","getLocation","navigator","geolocation","getCurrentPosition","position","coords","search","destination","includes","openPopup","e","marker","target","dest","options","price","getPrice","valid_image","getValidImage","popupContent","imageSource","date","Date","setDate","getDate","MyDate","MyDateString","getFullYear","getMonth","slice","button_book","button","unbindPopup","bindPopup","maxWidth","maxHeight","route","axios","require","priceMessage","params","URLSearchParams","append","response","get","headers","status","error","createMarker","wjIcon","iconUrl","bindTooltip","permanent","direction","offset","on","customTip","unbindTooltip","isPopupOpen","openTooltip","customPop","mounted","map","setView","tileLayer","minZoom","maxZoom","addTo","markers","markerClusterGroup","addLayer","setMaxBounds"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<!-- This is the latest version -->\n\n<template>\n  <div style=\"height:1000px; width:1300px\">\n    <div class=\"search-overlay\">\n      <input type=\"text\" class=\"search-overlay\" :placeholder=\"'From: ' + placeholderText\" v-model=\"searchTerm\"\n        @input=\"updateSuggestions(dests)\" @blur=\"hideSuggestions\">\n      <ul class=\"search-suggestions\" v-if=\"showSuggestions\">\n        <li class=\"search-suggestion\" v-for=\"(suggestion, index) in suggestions\" :key=\"index\"\n          @mousedown=\"selectSuggestion(dests, suggestion)\">\n          {{ suggestion[0] + \", \" + suggestion[1] }}\n        </li>\n      </ul>\n    </div>\n    <div id=\"map\" style=\"height:1000px; width:1300px\"></div>\n\n  </div>\n</template>\n  \n<script>\nimport \"leaflet/dist/leaflet.css\";\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\n\nimport westjet from '../assets/westjet.png';\nimport { conditionalExpression } from \"@babel/types\";\n\nexport default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  // components: {\n  //   LMap,\n  //   LTileLayer,\n  //   LMarker,\n  //   LIcon,\n  //   LTooltip,\n  // },\n  data() {\n    return {\n      url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482], //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [85, 50],\n      searchTerm: '',\n      suggestions: [],\n      suggestion: '',\n      showSuggestions: false,\n      placeholderText: 'Location Not Selected',\n      currentLocationAirportCode: 'YYC',\n      noWrap: true,\n      searchQuery: '',\n\n    };\n  },\n  methods: {\n    updateSuggestions(dests) {\n\n      var destinations = []\n      console.log(destinations)\n      for (var index in dests) {\n        destinations.push([dests[index].name, dests[index].countryName])\n      }\n      this.suggestions =\n        destinations.filter((suggestion) =>\n          suggestion[0].toLowerCase().startsWith(this.searchTerm.toLowerCase())\n        );\n      // Show the suggestions if there are any.\n      this.showSuggestions = this.suggestions.length > 0;\n    },\n    hideSuggestions() {\n      // Hide the suggestions when the search input loses focus.\n      this.showSuggestions = false;\n    },\n    selectSuggestion(dests, suggestion) {\n      // When a suggestion is clicked, update the search term and hide the suggestions.\n      this.searchTerm = suggestion[0];\n      this.showSuggestions = false;\n      for (var index in dests) {\n        if (dests[index].name === suggestion[0]) {\n          this.center = [dests[index].latitude, dests[index].longitude];\n          this.placeholderText = dests[index].name;\n          this.currentLocationAirportCode = dests[index].code;\n          console.log(this.currentLocationAirportCode)\n        }\n      }\n    },\n    latLng: function (lat, lng) {\n      return [lat, lng]\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude]\n        });\n      }\n    },\n    // openPopup: async function (e) {\n    //   let marker = e.target\n    //   let dest = marker.options.dest\n    //   //console.log(marker.options.dest.code)\n    //   const priceMessage = await this.getPrice(dest);\n\n    //   // let popupContent = `You have selected ${dest.name}'s airport <br> Price: $${price}`;\n    //   marker.unbindPopup().bindPopup(priceMessage).openPopup();\n\n    // },\n    // getPrice: async function (destination) {\n    //   if (destination.code == this.currentLocationAirportCode) {\n    //     return \"This is your current departure location\";\n    //   }\n\n    //   let route = this.currentLocationAirportCode + destination.code;\n\n    //   const axios = require('axios');\n\n    //   let price = \"\";\n    //   let priceMessage = \"\";\n\n    //   const params = new URLSearchParams();\n    //   params.append('o', this.currentLocationAirportCode);\n    //   params.append('d', destination.code);\n    //   params.append('rangeStartOffset', '0');\n    //   params.append('rangeEndOffset', '60');\n\n    //   try {\n    //     const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n    //       params: params,\n    //       headers: {\n    //         'accept': 'application/json'\n    //       }\n    //     });\n    //     price = response.data[route][0].price;\n    //     priceMessage = `You have selected ${destination.name}'s airport <br> Price: $${price}`;\n    //     if (response.data[route][0].status === \"NO_SCHEDULES\") {\n\n    //       priceMessage = \"This is a seasonal route that is currently not being served.\"\n    //     }\n    //   } catch (error) {\n    //     console.log(error);\n    //     priceMessage = \"No price available for this route.\";\n    //   }\n    //   console.log(price)\n    //   return priceMessage;\n    // },\n    // createMarker(dest) {\n    //   let wjIcon = L.icon({\n    //     iconUrl: this.icon,\n    //     iconSize: this.iconSize\n    //   });\n    // },\n\n    search(searchQuery, dests) {\n      for (var index in dests) {\n        var search = searchQuery.toLowerCase()\n        var destination = dests[index].name.toLowerCase()\n        if (destination.includes(search)) // search centers at the first substring result\n        {\n          this.center = [dests[index].latitude, dests[index].longitude]\n          return;\n        }\n      }\n    },\n    openPopup: async function (e) {\n      let marker = e.target\n      let dest = marker.options.dest\n      //console.log(marker.options.dest.code)\n      const price = await this.getPrice(dest.code);\n      const valid_image = await this.getValidImage(dest.code);\n\n      let popupContent = `<h1 style=\"font-weight: 200;\"> ${dest.name} <br>  <div\n        style = \" font-size: 1rem; font-weight: 200;\n    font-family: \"Noto Sans\",\"Noto Sans SC\",\"Roboto\",\"Trebuchet MS\",Arial,Sans-Serif;\n    letter-spacing: normal;\n   \n   \n    line-height: 1.2;\"\n    >  From $${price} CAD <div> </h1>  `;\n      console.log(dest)\n\n\n      let imageSource = `<img  style=\"border-radius: 10px;\"src=\"https://www.westjet.com/assets/wj-web/images/en/destination-defaults/square/${dest.code.toLowerCase()}-square.jpg\"  width=\"225\" \n       height=\"225\" border-radius: 25px;> </img> <br>`\n\n\n      var date = new Date();\n\n      // Add five days to current date\n      date.setDate(date.getDate() + 30);\n\n      console.log(date);\n\n      var MyDate = new Date();\n      var MyDateString;\n\n      MyDate.setDate(MyDate.getDate() + 30);\n\n\n      MyDateString = MyDate.getFullYear() + '-' + ('0' + (MyDate.getMonth() + 1)).slice(-2) + '-' + ('0' + MyDate.getDate()).slice(-2)\n\n      console.log(MyDateString)\n\n\n      let button_book = ` https://www.westjet.com/en-ca/flights/low-fares?origin=YQL&destination=${dest.code}&outbounddate=${MyDateString}`\n\n\n      // let button = ` <div class='text-center'> <button type=\"button\" class=\"btn btn-outline-dark mt-3 px-5\">Book Now!</button> </div>`\n      let button = ` <a href=https://www.westjet.com/en-ca/flights/low-fares?origin=YQL&destination=${dest.code}&outbounddate=${MyDateString} class=\"btn btn-outline-dark mt-3 px-5\" role=\"button\" \">Book Now!</a>`\n\n\n\n      popupContent = popupContent + imageSource + button\n      // + '<br>' + \"<img src='\" + \n      // 'https://images.unsplash.com/photo-1493134799591-2c9eed26201a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2l0eSUyMHNreWxpbmV8ZW58MHx8MHx8&w=1000&q=80' + \"'/>\";\n      marker.unbindPopup().bindPopup(popupContent,\n\n        { maxWidth: \"auto\", maxHeight: \"auto\" },\n\n\n\n\n      ).openPopup();\n\n    },\n    getValidImage: function (dest) {\n\n\n\n\n\n\n    },\n    getPrice: async function (destination) {\n      if (destination.code == this.currentLocationAirportCode) {\n        return \"This is your current departure location\";\n      }\n\n      let route = this.currentLocationAirportCode + destination.code;\n      console.log(route)\n\n      const axios = require('axios');\n\n      let price = \"\";\n      let priceMessage = \"\";\n\n      const params = new URLSearchParams();\n      params.append('o', this.currentLocationAirportCode);\n      params.append('d', destination.code);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n\n      try {\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n        priceMessage = `You have selected ${destination.name}'s airport <br> Price: $${price}`;\n        if (response.data[route][0].status === \"NO_SCHEDULES\") {\n\n          priceMessage = \"This is a seasonal route that is currently not being served.\"\n        }\n      } catch (error) {\n        console.log(error);\n        priceMessage = \"No price available for this route.\";\n      }\n      console.log(price)\n      return priceMessage;\n    },\n    createMarker(dest) {\n      let wjIcon = L.icon({\n        iconUrl: this.icon,\n        iconSize: this.iconSize\n      });\n      //<l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n      let marker = L.marker(this.latLng(dest.latitude, dest.longitude), { icon: wjIcon, dest: dest });\n      marker.bindTooltip(\"12\", {\n        permanent: true,\n        direction: 'top',\n        offset: [0, -17],\n      });\n      marker.on('click', this.openPopup)\n      marker.bindTooltip(`${dest.name}, ${dest.countryName}`)\n\n      return marker;\n    },\n\n\n    customTip() {\n      this.unbindTooltip();\n      if (!this.isPopupOpen()) this.bindTooltip('Short description').openTooltip();\n    },\n\n    customPop() {\n      this.unbindTooltip();\n    }\n\n  },\n  mounted() {\n\n    this.getLocation();\n\n    var map = L.map(\"map\").setView([47.313220, -1.319482], 4);\n\n\n\n    L.tileLayer(\n      'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      {\n        minZoom: 4,\n        maxZoom: 8,\n        attribution: 'Maps <a href=&copy; https://www.thunderforest.com/>Thunderforest</a>, Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap Contributors</a>',\n\n\n      }\n    ).addTo(map);\n\n    let markers = L.markerClusterGroup();\n\n    // create a marker for each airport\n    for (let dest of this.dests) {\n\n      let marker = this.createMarker(dest)\n      markers.addLayer(marker)\n\n    }\n\n    map.addLayer(markers);\n    map.setMaxBounds([[-90, -180], [90, 180]])\n  }\n};\n</script>\n  \n<style>\n.leaflet-container {\n  border-radius: 25px;\n  color: #ffffff;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  font-weight: 200;\n}\n\n.search-overlay {\n  position: absolute;\n  top: 4.5rem;\n  left: 19rem;\n  width: 60%;\n  height: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n  pointer-events: auto;\n}\n\n.search-overlay:hover #map-container {\n  pointer-events: none;\n}\n\ninput[type=\"text\"] {\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  font-size: 16px;\n  background-color: white;\n  width: 50%;\n}\n\n.search-container {\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.search-bar {\n  position: relative;\n}\n\n.search-input {\n  width: 300px;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-suggestions {\n  position: absolute;\n  top: 7.5rem;\n  left: 19rem;\n  z-index: 1;\n  width: 300px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.search-suggestion {\n  padding: 8px;\n  cursor: pointer;\n}\n\n.search-suggestion:hover {\n  background-color: #f2f2f2;\n}\n</style>\n\n    \n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}