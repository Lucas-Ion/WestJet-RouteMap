{"ast":null,"code":"import \"leaflet.markercluster/dist/MarkerCluster.css\";\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\nimport { inject, nextTick, onBeforeUnmount, onMounted, provide, ref } from \"vue\";\nimport { propsBinder, remapEvents } from \"@vue-leaflet/vue-leaflet/src/utils\";\nimport { render, setup as layerSetup } from \"@vue-leaflet/vue-leaflet/src/functions/layer\";\nconst props = {\n  options: {\n    type: Object,\n    default() {\n      return {};\n    }\n  }\n};\nexport default {\n  name: \"MarkerCluster\",\n  props,\n  // emits: ['ready'],\n\n  setup(props, context) {\n    const leafletRef = ref({});\n    const ready = ref(false);\n    const addLayerToMainMap = inject(\"addLayer\");\n    const removeLayerFromMainMap = inject(\"removeLayer\");\n    provide(\"canSetParentHtml\", () => !!leafletRef.value.getElement());\n    provide(\"setParentHtml\", html => leafletRef.value.getElement().innerHTML = html);\n    // provide('setIcon', (newIcon) => leafletRef.value.setIcon && leafletRef.value.setIcon(newIcon))\n    provide(\"addLayer\", layer => {\n      // replace the provided addLayer function for child components of MarkerCluster so they add to the cluster rather than the map\n      leafletRef.value.addLayer(layer.leafletObject);\n    });\n    provide(\"removeLayer\", layer => {\n      leafletRef.value.removeLayer(layer.leafletObject);\n    });\n\n    // const {options, methods} = markerSetup(props, leafletRef, context)\n\n    const {\n      methods\n    } = layerSetup(props, leafletRef, context);\n    onMounted(async () => {\n      const {\n        DomEvent,\n        marker\n      } = await import(\"leaflet/dist/leaflet-src.esm\");\n      const {\n        MarkerClusterGroup\n      } = await import(\"leaflet.markercluster/dist/leaflet.markercluster-src.js\");\n      leafletRef.value = new MarkerClusterGroup(props.options);\n      const listeners = remapEvents(context.attrs);\n      DomEvent.on(leafletRef.value, listeners);\n      propsBinder(methods, leafletRef.value, props);\n      addLayerToMainMap({\n        ...props,\n        ...methods,\n        leafletObject: leafletRef.value\n      });\n      ready.value = true;\n      nextTick(() => context.emit(\"ready\", leafletRef.value));\n    });\n    onBeforeUnmount(() => leafletRef.value && leafletRef.value._leaflet_id && removeLayerFromMainMap({\n      leafletObject: leafletRef.value\n    }));\n    return {\n      ready,\n      leafletObject: leafletRef\n    };\n  },\n  render() {\n    return render(this.ready, this.$slots);\n  }\n};","map":{"version":3,"mappings":"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","names":["inject","nextTick","onBeforeUnmount","onMounted","provide","ref","propsBinder","remapEvents","render","setup","layerSetup","props","options","type","Object","default","name","context","leafletRef","ready","addLayerToMainMap","removeLayerFromMainMap","value","getElement","html","innerHTML","layer","addLayer","leafletObject","removeLayer","methods","DomEvent","marker","MarkerClusterGroup","listeners","attrs","on","emit","_leaflet_id","$slots"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/MarkerCluster.vue"],"sourcesContent":["<template>\n  <div style=\"display: none\">\n    <slot v-if=\"ready\"></slot>\n  </div>\n</template>\n\n<script>\nimport \"leaflet.markercluster/dist/MarkerCluster.css\";\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\nimport {\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n} from \"vue\";\nimport { propsBinder, remapEvents } from \"@vue-leaflet/vue-leaflet/src/utils\";\nimport {\n  render,\n  setup as layerSetup,\n} from \"@vue-leaflet/vue-leaflet/src/functions/layer\";\n\nconst props = {\n  options: {\n    type: Object,\n    default() {\n      return {};\n    },\n  },\n};\n\nexport default {\n  name: \"MarkerCluster\",\n\n  props,\n\n  // emits: ['ready'],\n\n  setup(props, context) {\n    const leafletRef = ref({});\n    const ready = ref(false);\n\n    const addLayerToMainMap = inject(\"addLayer\");\n    const removeLayerFromMainMap = inject(\"removeLayer\");\n\n    provide(\"canSetParentHtml\", () => !!leafletRef.value.getElement());\n    provide(\n      \"setParentHtml\",\n      (html) => (leafletRef.value.getElement().innerHTML = html)\n    );\n    // provide('setIcon', (newIcon) => leafletRef.value.setIcon && leafletRef.value.setIcon(newIcon))\n    provide(\"addLayer\", (layer) => {\n      // replace the provided addLayer function for child components of MarkerCluster so they add to the cluster rather than the map\n      leafletRef.value.addLayer(layer.leafletObject);\n    });\n    provide(\"removeLayer\", (layer) => {\n      leafletRef.value.removeLayer(layer.leafletObject);\n    });\n\n    // const {options, methods} = markerSetup(props, leafletRef, context)\n\n    const { methods } = layerSetup(props, leafletRef, context);\n\n    onMounted(async () => {\n      const { DomEvent, marker } = await import(\"leaflet/dist/leaflet-src.esm\");\n\n      const { MarkerClusterGroup } = await import(\n        \"leaflet.markercluster/dist/leaflet.markercluster-src.js\"\n      );\n      leafletRef.value = new MarkerClusterGroup(props.options);\n\n      const listeners = remapEvents(context.attrs);\n      DomEvent.on(leafletRef.value, listeners);\n\n      propsBinder(methods, leafletRef.value, props);\n\n      addLayerToMainMap({\n        ...props,\n        ...methods,\n        leafletObject: leafletRef.value,\n      });\n\n      ready.value = true;\n      nextTick(() => context.emit(\"ready\", leafletRef.value));\n    });\n\n    onBeforeUnmount(\n      () =>\n        leafletRef.value &&\n        leafletRef.value._leaflet_id &&\n        removeLayerFromMainMap({ leafletObject: leafletRef.value })\n    );\n\n    return { ready, leafletObject: leafletRef };\n  },\n  render() {\n    return render(this.ready, this.$slots);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}