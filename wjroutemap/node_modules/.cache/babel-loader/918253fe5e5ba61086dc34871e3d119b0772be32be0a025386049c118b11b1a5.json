{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"1000px\",\n    \"width\": \"1300px\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"search-overlay\"\n};\nconst _hoisted_3 = [\"placeholder\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"search-suggestions\"\n};\nconst _hoisted_5 = [\"onMousedown\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  style: {\n    \"height\": \"1000px\",\n    \"width\": \"1300px\"\n  }\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"search-overlay\",\n    placeholder: 'From: ' + _ctx.placeholderText,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchTerm = $event),\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.updateSuggestions(_ctx.dests)),\n    onBlur: _cache[2] || (_cache[2] = (...args) => _ctx.hideSuggestions && _ctx.hideSuggestions(...args))\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3), [[_vModelText, _ctx.searchTerm]]), _ctx.showSuggestions ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.suggestions, (suggestion, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"search-suggestion\",\n      key: index,\n      onMousedown: $event => _ctx.selectSuggestion(_ctx.dests, suggestion)\n    }, _toDisplayString(suggestion[0] + \", \" + suggestion[1]), 41 /* TEXT, PROPS, HYDRATE_EVENTS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _hoisted_6]);\n}","map":{"version":3,"mappings":";;EACOA,KAAmC,EAAnC;IAAA;IAAA;EAAA;AAAmC;;EACjCC,KAAK,EAAC;AAAgB;;;;EAErBA,KAAK,EAAC;;;gCAMZC,oBAAwD;EAAnDC,EAAE,EAAC,KAAK;EAACH,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;;uBAThBI,oBAWM,OAXNC,UAWM,GAVJH,oBAOM,OAPNI,UAOM,mBANJJ,oBAAmK;IAA5JK,IAAI,EAAC,MAAM;IAACN,KAAK,EAAC,gBAAgB;IAAEO,WAAW,aAAaC,oBAAe;+DAAWA,eAAU;IAAGC,OAAK,sCAAED,sBAAiB,CAACA,UAAK;IAAIE,MAAI,yCAAEF,qDAAe;uEAApEA,eAAU,KAClEA,oBAAe,kBAApDL,oBAIK,MAJLQ,UAIK,sBAHHR,oBAEKS,6BAFuDJ,gBAAW,GAAjCK,UAAU,EAAEC,KAAK;yBAAvDX,oBAEK;MAFDH,KAAK,EAAC,mBAAmB;MAA6Ce,GAAG,EAAED,KAAK;MAAGE,WAAS,YAAER,qBAAgB,CAACA,UAAK,EAAEK,UAAU;wBAC/HA,UAAU,aAAaA,UAAU;2EAI1CI,UAAwD","names":["style","class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","type","placeholder","_ctx","onInput","onBlur","_hoisted_4","_Fragment","suggestion","index","key","onMousedown","_hoisted_6"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<template>\n  <div style=\"height:1000px; width:1300px\">\n    <div class=\"search-overlay\">\n      <input type=\"text\" class=\"search-overlay\" :placeholder=\"'From: ' + placeholderText\" v-model=\"searchTerm\" @input=\"updateSuggestions(dests)\" @blur=\"hideSuggestions\">\n      <ul class=\"search-suggestions\" v-if=\"showSuggestions\">\n        <li class=\"search-suggestion\" v-for=\"(suggestion, index) in suggestions\" :key=\"index\" @mousedown=\"selectSuggestion(dests, suggestion)\">\n          {{ suggestion[0] + \", \" + suggestion[1] }}\n        </li>\n      </ul>\n    </div>\n    <div id=\"map\" style=\"height:1000px; width:1300px\"></div>\n\n  </div>\n</template>\n  \n<script>\nimport \"leaflet/dist/leaflet.css\";\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\n\n<<<<<<< HEAD\n  import westjet from '../assets/westjet.png';\n  import { conditionalExpression } from \"@babel/types\";\n\n  export default {\n    name: 'DestMap',\n    props: {\n      dests: Array\n    },\n    // components: {\n    //   LMap,\n    //   LTileLayer,\n    //   LMarker,\n    //   LIcon,\n    //   LTooltip,\n    // },\n    data() {\n      return {\n        url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n        attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        zoom: 4,\n        center: [47.313220, -1.319482], //default\n        markerLatLngBob: [47.313220, -17.319482],\n        icon: westjet,\n        iconSize: [85, 25],\n        searchTerm: '',\n        suggestions: [],\n        suggestion: '',\n        showSuggestions: false,\n        placeholderText: 'Location Not Selected',\n        currentLocationAirportCode: 'YYC',\n        noWrap: true,\n        searchQuery: '',\n\n      };\n    },\n    methods: {\n      updateSuggestions(dests) {\n        \n        var destinations = []\n        for (var index in dests) {\n          destinations.push([dests[index].name, dests[index].countryName])\n        }\n        this.suggestions =\n          destinations.filter((suggestion) =>\n            suggestion[0].toLowerCase().startsWith(this.searchTerm.toLowerCase())\n          );\n        // Show the suggestions if there are any.\n        this.showSuggestions = this.suggestions.length > 0;\n      },\n      hideSuggestions() {\n        // Hide the suggestions when the search input loses focus.\n        this.showSuggestions = false;\n      },\n      selectSuggestion(dests, suggestion) {\n        // When a suggestion is clicked, update the search term and hide the suggestions.\n        this.searchTerm = suggestion[0];\n        this.showSuggestions = false;\n        for (var index in dests) {\n          if (dests[index].name === suggestion[0]) {\n            this.center = [dests[index].latitude, dests[index].longitude];\n            this.placeholderText = dests[index].name;\n            this.currentLocationAirportCode = dests[index].code;\n          }\n        }\n      },\n      latLng: function(lat, lng) {\n        return [lat, lng]\n      },\n      getLocation: function() {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position) => {\n            var latitude = position.coords.latitude;\n            var longitude = position.coords.longitude;\n            this.center = [latitude, longitude]\n          });\n        }\n      },\n      openPopup: async function(e) {\n        let marker = e.target\n        let dest = marker.options.dest\n        //console.log(marker.options.dest.code)\n        const priceMessage = await this.getPrice(dest);\n\n        // let popupContent = `You have selected ${dest.name}'s airport <br> Price: $${price}`;\n        marker.unbindPopup().bindPopup(priceMessage).openPopup();\n\n      },\n      getPrice: async function (destination) {\n        if(destination.code == this.currentLocationAirportCode)\n        {\n          return \"This is your current departure location\";\n        }\n\n        let route = this.currentLocationAirportCode + destination.code;\n\n        const axios = require('axios');\n\n        let price = \"\";\n        let priceMessage = \"\";\n\n        const params = new URLSearchParams();\n        params.append('o', this.currentLocationAirportCode);\n        params.append('d', destination.code);\n        params.append('rangeStartOffset', '0');\n        params.append('rangeEndOffset', '60');\n\n        try{\n          const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n            params: params,\n            headers: {\n              'accept': 'application/json'\n            }\n          });\n          price = response.data[route][0].price;\n          priceMessage = `You have selected ${destination.name}'s airport <br> Price: $${price}`;\n          if(response.data[route][0].status === \"NO_SCHEDULES\"){\n            \n            priceMessage = \"This is a seasonal route that is currently not being served.\"\n          }\n        } catch(error) {\n          console.log(error);\n          priceMessage = \"No price available for this route.\";\n        }\n        console.log(price)\n        return priceMessage;\n      },\n      createMarker(dest) {\n        let wjIcon = L.icon({\n          iconUrl: this.icon,\n          iconSize: this.iconSize\n=======\nimport westjet from '../assets/westjet.png';\n\nexport default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  // components: {\n  //   LMap,\n  //   LTileLayer,\n  //   LMarker,\n  //   LIcon,\n  //   LTooltip,\n  // },\n  data() {\n    return {\n      url: 'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482], //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [85, 50],\n      searchQuery: '',\n      noWrap: true,\n\n    };\n  },\n  methods: {\n    latLng: function (lat, lng) {\n      return [lat, lng]\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude]\n>>>>>>> updating-visuals\n        });\n      }\n    },\n    search(searchQuery, dests) {\n      for (var index in dests) {\n        var search = searchQuery.toLowerCase()\n        var destination = dests[index].name.toLowerCase()\n        if (destination.includes(search)) // search centers at the first substring result\n        {\n          this.center = [dests[index].latitude, dests[index].longitude]\n          return;\n        }\n      }\n    },\n    openPopup: async function (e) {\n      let marker = e.target\n      let dest = marker.options.dest\n      //console.log(marker.options.dest.code)\n      const price = await this.getPrice(dest.code);\n      const valid_image = await this.getValidImage(dest.code);\n\n      let popupContent = `<h1 style=\"font-weight: 200;\"> ${dest.name} <br>  <div\n        style = \" font-size: 1rem; font-weight: 200;\n    font-family: \"Noto Sans\",\"Noto Sans SC\",\"Roboto\",\"Trebuchet MS\",Arial,Sans-Serif;\n    letter-spacing: normal;\n   \n   \n    line-height: 1.2;\"\n    >  From $${price} CAD <div> </h1>  `;\n      console.log(dest)\n\n\n\n\n\n      let imageSource = `<img  style=\"border-radius: 10px;\"src=\"https://www.westjet.com/assets/wj-web/images/en/destination-defaults/square/${dest.code.toLowerCase()}-square.jpg\"  width=\"225\" \n       height=\"225\" border-radius: 25px;> </img> <br>`\n\n\n\n\n      var date = new Date();\n\n      // Add five days to current date\n      date.setDate(date.getDate() + 30);\n\n      console.log(date);\n\n      var MyDate = new Date();\n      var MyDateString;\n\n      MyDate.setDate(MyDate.getDate() + 30);\n\n\n      MyDateString = MyDate.getFullYear() + '-' + ('0' + (MyDate.getMonth() + 1)).slice(-2) + '-' + ('0' + MyDate.getDate()).slice(-2)\n\n      console.log(MyDateString)\n\n\n      let button_book = ` https://www.westjet.com/en-ca/flights/low-fares?origin=YQL&destination=${dest.code}&outbounddate=${MyDateString}`\n\n\n      // let button = ` <div class='text-center'> <button type=\"button\" class=\"btn btn-outline-dark mt-3 px-5\">Book Now!</button> </div>`\n      let button = ` <a href=https://www.westjet.com/en-ca/flights/low-fares?origin=YQL&destination=${dest.code}&outbounddate=${MyDateString} class=\"btn btn-outline-dark mt-3 px-5\" role=\"button\" \">Book Now!</a>`\n\n\n\n      popupContent = popupContent + imageSource + button\n      // + '<br>' + \"<img src='\" + \n      // 'https://images.unsplash.com/photo-1493134799591-2c9eed26201a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2l0eSUyMHNreWxpbmV8ZW58MHx8MHx8&w=1000&q=80' + \"'/>\";\n      marker.unbindPopup().bindPopup(popupContent,\n\n        { maxWidth: \"auto\", maxHeight: \"auto\" },\n\n\n\n\n      ).openPopup();\n\n    },\n    getValidImage: function (dest) {\n\n\n\n\n\n\n    },\n    getPrice: async function (destination) {\n\n      let route = \"YYC\" + destination\n\n      const axios = require('axios');\n\n      let price = \"\"\n\n      const params = new URLSearchParams();\n      params.append('o', 'YYC');\n      params.append('d', destination);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n\n      try {\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n        if (response.data[route][0].status === \"NO_SCHEDULES\") {\n          console.log(\"h\")\n          price = \"This is a seasonal route that is currently not being served.\"\n        }\n      } catch (error) {\n        console.log(error);\n        price = \"No price available.\";\n      }\n      console.log(price)\n      return price;\n    },\n    createMarker(dest) {\n      let wjIcon = L.icon({\n        iconUrl: this.icon,\n        iconSize: this.iconSize\n      });\n      //<l-tooltip> {{ dest.name }}, {{dest.countryName}} </l-tooltip>\n      let marker = L.marker(this.latLng(dest.latitude, dest.longitude), { icon: wjIcon, dest: dest });\n      marker.bindTooltip(\"12\", {\n        permanent: true,\n        direction: 'top',\n        offset: [0, -17],\n      });\n      marker.on('click', this.openPopup)\n      marker.bindTooltip(`${dest.name}, ${dest.countryName}`)\n\n      return marker;\n    },\n\n\n    customTip() {\n      this.unbindTooltip();\n      if (!this.isPopupOpen()) this.bindTooltip('Short description').openTooltip();\n    },\n\n    customPop() {\n      this.unbindTooltip();\n    }\n\n  },\n  mounted() {\n\n    this.getLocation();\n\n    var map = L.map(\"map\").setView([47.313220, -1.319482], 4);\n\n\n\n    L.tileLayer(\n      'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\n      {\n        minZoom: 4,\n        maxZoom: 8,\n        attribution: 'Maps <a href=&copy; https://www.thunderforest.com/>Thunderforest</a>, Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap Contributors</a>',\n\n\n      }\n    ).addTo(map);\n\n    let markers = L.markerClusterGroup();\n\n    // create a marker for each airport\n    for (let dest of this.dests) {\n\n      let marker = this.createMarker(dest)\n      markers.addLayer(marker)\n\n    }\n\n    map.addLayer(markers);\n    map.setMaxBounds([[-90, -180], [90, 180]])\n  }\n};\n</script>\n  \n<style>\n<<<<<<< HEAD\n  .leaflet-container {\n    border-radius: 25px;\n  }\n  .search-overlay {\n    position: absolute;\n    top: 140px;\n    left: 195px;\n    width: 60%;\n    height: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n    pointer-events: auto;\n  }\n  .search-overlay:hover #map-container{\n    pointer-events: none;\n  }\n  input[type=\"text\"] {\n    padding: 10px;\n    border-radius: 5px;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    background-color: white;\n    width: 50%;\n  }\n  .search-container {\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n  }\n  .search-bar {\n    position: relative;\n  }\n  .search-input {\n    width: 300px;\n    padding: 8px;\n    border: none;\n    border-radius: 5px;\n  }\n  .search-suggestions {\n    position: absolute;\n    top: 180px;\n    left: 200px;\n    z-index: 1;\n    width: 300px;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n  .search-suggestion {\n    padding: 8px;\n    cursor: pointer;\n  }\n  .search-suggestion:hover {\n    background-color: #f2f2f2;\n  }\n=======\n.leaflet-container {\n  border-radius: 25px;\n  color: #ffffff;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  font-weight: 200;\n\n}\n\n.search-overlay {\n  position: absolute;\n  top: 0;\n  left: -100px;\n  width: 75%;\n  height: 12%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n}\n\ninput[type=\"text\"] {\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  font-size: 16px;\n  background-color: white;\n  width: 50%;\n}\n>>>>>>> updating-visuals\n</style>\n\n    \n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}