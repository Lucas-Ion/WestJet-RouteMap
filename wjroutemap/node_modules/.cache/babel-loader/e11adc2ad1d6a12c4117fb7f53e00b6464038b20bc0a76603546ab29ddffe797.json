{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"1000px\",\n    \"width\": \"1300px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_l_tile_layer = _resolveComponent(\"l-tile-layer\");\n  const _component_marker_cluster = _resolveComponent(\"marker-cluster\");\n  const _component_l_icon = _resolveComponent(\"l-icon\");\n  const _component_l_popup = _resolveComponent(\"l-popup\");\n  const _component_l_tooltip = _resolveComponent(\"l-tooltip\");\n  const _component_l_marker = _resolveComponent(\"l-marker\");\n  const _component_l_map = _resolveComponent(\"l-map\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_l_map, {\n    ref: \"map\",\n    \"max-zoom\": 19,\n    zoomAnimation: true,\n    markerZoomAnimation: true,\n    zoom: $data.zoom,\n    center: {\n      lat: 51.289404225298256,\n      lng: 9.697202050919614\n    },\n    onReady: $options.onLeafletReady\n  }, {\n    default: _withCtx(() => [_createVNode(_component_l_tile_layer, {\n      url: \"https://tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db\",\n      \"layer-type\": \"base\",\n      name: \"OpenStreetMap\"\n    }), _createVNode(_component_marker_cluster, {\n      options: {\n        showCoverageOnHover: false,\n        chunkedLoading: true\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_marker_cluster, {\n        options: {\n          removeOutsideVisibleBounds: true,\n          chunkedLoading: true\n        },\n        onReady: $options.onMarkerClusterReady\n      }, null, 8 /* PROPS */, [\"onReady\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.dests, (dest, index) => {\n        return _openBlock(), _createBlock(_component_l_marker, {\n          key: index,\n          \"lat-lng\": $options.latLng(dest.latitude, dest.longitude)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_l_icon, {\n            \"icon-size\": $data.iconSize,\n            \"icon-url\": $data.icon\n          }, null, 8 /* PROPS */, [\"icon-size\", \"icon-url\"]), _createVNode(_component_l_popup, null, {\n            default: _withCtx(() => [_createTextVNode(\" You have selected \" + _toDisplayString(dest.name) + \"'s airport \", 1 /* TEXT */), _hoisted_2, _createTextVNode(\" Price: \" + _toDisplayString($options.getPrice(dest.code)), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_l_tooltip, null, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(dest.name) + \", \" + _toDisplayString(dest.countryName) + \", \" + _toDisplayString($options.getPrice(dest.code)), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"lat-lng\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"zoom\", \"center\", \"onReady\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAmC,EAAnC;IAAA;IAAA;EAAA;AAAmC;gCAkCoBC,oBAAI;;;;;;;;;;uBAlChEC,oBA2CM,OA3CNC,UA2CM,GAxCJC,aAuCQC;IAlCRC,GAAG,EAAC,KAAK;IACF,UAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,IAAI;IACnBC,mBAAmB,EAAE,IAAI;IACzBC,IAAI,EAAEC,UAAI;IACVC,MAAM,EAAE;MAAAC;MAAAC;IAAA,CAAmD;IAC7DC,OAAK,EAAEC;;sBAGV,MAEwD,CAFxDX,aAEwDY;MADtDC,GAAG,EAAC,uGAAuG;MAC3G,YAAU,EAAC,MAAM;MAACC,IAAI,EAAC;QACvBd,aAqBee;MApBdC,OAAO,EAAE;QAAAC;QAAAC;MAAA;IAAoD;wBAGhE,MAME,CANFlB,aAMEe;QALCC,OAAO,EAAE;;;SAGT;QACAN,OAAK,EAAEC;+DAGVb,oBAQWqB,6BARoCC,YAAK,GAArBC,IAAI,EAAEC,KAAK;6BAA1CC,aAQWC;UARAC,GAAG,EAAEH,KAAK;UAAkC,SAAO,EAAEX,eAAM,CAACU,IAAI,CAACK,QAAQ,EAAEL,IAAI,CAACM,SAAS;;4BAClG,MAAwD,CAAxD3B,aAAwD4B;YAA/C,WAAS,EAAEtB,cAAQ;YAAG,UAAQ,EAAEA;8DACzCN,aAGU6B;8BAHD,MAAmB,kBAAnB,qBAAmB,oBAAGR,IAAI,CAACP,IAAI,IAAG,aAAW,2BAAI,6BAEjD,oBAAGH,iBAAQ,CAACU,IAAI,CAACS,IAAI;;;wCAE9B9B,aAC8E+B;8BAA5E,MAAe,mCAAZV,IAAI,CAACP,IAAI,IAAG,IAAE,oBAAGO,IAAI,CAACW,WAAW,IAAG,IAAE,oBAAErB,iBAAQ,CAACU,IAAI,CAACS,IAAI","names":["style","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_l_map","ref","zoomAnimation","markerZoomAnimation","zoom","$data","center","lat","lng","onReady","$options","_component_l_tile_layer","url","name","_component_marker_cluster","options","showCoverageOnHover","chunkedLoading","_Fragment","$props","dest","index","_createBlock","_component_l_marker","key","latitude","longitude","_component_l_icon","_component_l_popup","code","_component_l_tooltip","countryName"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<template>\n  <div style=\"height:1000px; width:1300px\">\n \n \n    <l-map \n    \n   \n    \n    \n    ref=\"map\"\n    v-bind:max-zoom=\"19\"\n    v-bind:zoomAnimation=\"true\"\n    v-bind:markerZoomAnimation=\"true\"\n    v-bind:zoom=\"zoom\"\n    v-bind:center=\"{ lat: 51.289404225298256, lng: 9.697202050919614 }\"\n    v-on:ready=\"onLeafletReady\"\n    >\n\n      <l-tile-layer\n        url=\"https://tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db\"\n        layer-type=\"base\" name=\"OpenStreetMap\"></l-tile-layer>\n        <marker-cluster\n        :options=\"{ showCoverageOnHover: false, chunkedLoading: true }\"\n      >\n\n      <marker-cluster\n        :options=\"{\n          removeOutsideVisibleBounds: true,\n          chunkedLoading: true,\n        }\"\n        @ready=\"onMarkerClusterReady\"\n      />\n\n      <l-marker :key=\"index\" v-for=\"(dest, index) in dests\" :lat-lng=\"latLng(dest.latitude, dest.longitude)\">\n        <l-icon :icon-size=\"iconSize\" :icon-url=\"icon\"></l-icon>\n        <l-popup> You have selected {{ dest.name }}'s airport <br>\n         \n          Price: {{ getPrice(dest.code) }}\n        </l-popup>\n        <l-tooltip>\n          {{ dest.name }}, {{ dest.countryName }}, {{getPrice(dest.code)}}</l-tooltip>\n      </l-marker>\n      </marker-cluster>\n    </l-map>\n  </div>\n </template>\n  <script>\n import \"leaflet/dist/leaflet.css\";\n import MarkerCluster from \"./MarkerCluster.vue\";\n\n import {\n  LMap,\n  LTileLayer,\n  LMarker,\n  LIcon,\n  LTooltip,\n  LPopup,\n } from \"@vue-leaflet/vue-leaflet\";\n import westjet from '../assets/westjet.png'\n\n export default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LIcon,\n    LPopup,\n    LTooltip,\n    MarkerCluster,\n  },\n  data() {\n    return {\n      url: 'https://tile.thunderforest.com/atlas/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482], //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [40, 25],\n    };\n  },\n  methods: {\n    latLng: function (lat, lng) {\n \n \n      return [lat, lng]\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude]\n        });\n      }\n    },\n    // dispPrice: async function (cityCode){\n    //   const result = await this.getPrice(cityCode);\n    //   console.log(result)\n    //   return result;\n \n    // },\n    getPrice: function (destination) {\n \n \n      let route = \"YYC\"+ destination\n \n \n      let value = \"\"\n \n \n      const axios = require('axios');\n \n \n      const params = new URLSearchParams();\n      params.append('o', 'YYC');\n      //console.log(destination)\n      params.append('d', destination);\n      //params.append('sourceCountryCode', 'CA');\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n\n     \n \n      const response = axios.get('https://api.westjet.com/price-points/v1/retail', {\n        params: params,\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(response => {\n        value = (response.data[route][0].price);\n      }).catch(error => {\n        console.log(error)\n      });\n \n      if (value == 'undefined'){\n        value = 'Price Not Available'\n      }\n      \n      //console.log(route + \" \" + value)\n      return value;\n    },\n    async onMarkerClusterReady(markerCluster) {\n      const L = await import(\"leaflet/dist/leaflet-src.esm\");\n\n      await this.$nextTick();\n\n      function r(min, max) {\n        return Math.random() * (max - min) + min;\n      }\n      let markers = [];\n      for (let i = 0; i < 50000; i++) {\n        const title = `marker ${i}`;\n        const marker = L.marker(\n          L.latLng(r(53.82477192, 53.92365592), r(27.5078027, 27.70640622)),\n          { title: title }\n        );\n        marker.bindPopup(title);\n        markers.push(marker);\n      }\n\n      markerCluster.addLayers(markers);\n    },\n\n    async onLeafletReady() {\n      this.leafletObject = this.$refs.map.leafletObject;\n      this.leafletReady = true;\n    },\n  },\n  mounted() {\n    this.getLocation()\n\n  },\n };\n </script>\n  <style>\n .leaflet-container {\n  border-radius: 25px;\n }\n </style>\n \n \n   \n   \n \n "]},"metadata":{},"sourceType":"module","externalDependencies":[]}