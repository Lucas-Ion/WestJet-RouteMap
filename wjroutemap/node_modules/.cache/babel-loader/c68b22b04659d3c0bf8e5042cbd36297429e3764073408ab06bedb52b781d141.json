{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_l_tile_layer = _resolveComponent(\"l-tile-layer\");\n  const _component_marker_cluster = _resolveComponent(\"marker-cluster\");\n  const _component_l_map = _resolveComponent(\"l-map\");\n  return _openBlock(), _createBlock(_component_l_map, {\n    ref: \"map\",\n    \"max-zoom\": 19,\n    zoomAnimation: true,\n    markerZoomAnimation: true,\n    zoom: $data.zoom,\n    center: {\n      lat: 51.289404225298256,\n      lng: 9.697202050919614\n    },\n    onReady: $options.onLeafletReady\n  }, {\n    default: _withCtx(() => [$data.leafletReady ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createVNode(_component_l_tile_layer, {\n      url: $data.url\n    }, null, 8 /* PROPS */, [\"url\"]), _createVNode(_component_marker_cluster, {\n      options: {\n        removeOutsideVisibleBounds: true,\n        chunkedLoading: true\n      },\n      onReady: $options.onMarkerClusterReady\n    }, null, 8 /* PROPS */, [\"onReady\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"zoom\", \"center\", \"onReady\"]);\n}","map":{"version":3,"mappings":";;;;;uBACIA,aAmBQC;IAlBNC,GAAG,EAAC,KAAK;IACF,UAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,IAAI;IACnBC,mBAAmB,EAAE,IAAI;IACzBC,IAAI,EAAEC,UAAI;IACVC,MAAM,EAAE;MAAAC;MAAAC;IAAA,CAAmD;IAC7DC,OAAK,EAAEC;;sBAEZ,MASW,CATKL,kBAAY,kBAA5BM,oBASWC;MAAAC;IAAA,IARTC,aAA2BC;MAAZC,GAAG,EAAEX;IAAG,kCACvBS,aAMEG;MALCC,OAAO,EAAE;;;OAGT;MACAT,OAAK,EAAEC","names":["_createBlock","_component_l_map","ref","zoomAnimation","markerZoomAnimation","zoom","$data","center","lat","lng","onReady","$options","_createElementBlock","_Fragment","key","_createVNode","_component_l_tile_layer","url","_component_marker_cluster","options"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/TestMap.vue"],"sourcesContent":["<template>\n    <l-map\n      ref=\"map\"\n      v-bind:max-zoom=\"19\"\n      v-bind:zoomAnimation=\"true\"\n      v-bind:markerZoomAnimation=\"true\"\n      v-bind:zoom=\"zoom\"\n      v-bind:center=\"{ lat: 51.289404225298256, lng: 9.697202050919614 }\"\n      v-on:ready=\"onLeafletReady\"\n    >\n      <template v-if=\"leafletReady\">\n        <l-tile-layer :url=\"url\" />\n        <marker-cluster\n          :options=\"{\n            removeOutsideVisibleBounds: true,\n            chunkedLoading: true,\n          }\"\n          @ready=\"onMarkerClusterReady\"\n        />\n      </template>\n    </l-map>\n  </template>\n  <script>\n  import \"leaflet/dist/leaflet.css\";\n  \n  import {\n    LMap,\n    LMarker,\n    LTileLayer,\n    LPopup,\n  } from \"@vue-leaflet/vue-leaflet/src/lib\";\n  import MarkerCluster from \"./MarkerCluster.vue\";\n  \n  export default {\n    components: {\n      LMap,\n      LTileLayer,\n      MarkerCluster,\n      LPopup,\n    },\n  \n    data() {\n      return {\n        url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n        zoom: 1,\n        markers: [],\n  \n        leafletReady: false,\n        leafletObject: null,\n  \n        visible: false,\n      };\n    },\n  \n    methods: {\n      async onMarkerClusterReady(markerCluster) {\n        const L = await import(\"leaflet/dist/leaflet-src.esm\");\n  \n        await this.$nextTick();\n  \n        function r(min, max) {\n          return Math.random() * (max - min) + min;\n        }\n        let markers = [];\n        for (let i = 0; i < 50000; i++) {\n          const title = `marker ${i}`;\n          const marker = L.marker(\n            L.latLng(r(53.82477192, 53.92365592), r(27.5078027, 27.70640622)),\n            { title: title }\n          );\n          marker.bindPopup(title);\n          markers.push(marker);\n        }\n  \n        markerCluster.addLayers(markers);\n      },\n  \n      async onLeafletReady() {\n        this.leafletObject = this.$refs.map.leafletObject;\n        this.leafletReady = true;\n      },\n    },\n  };\n  </script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}