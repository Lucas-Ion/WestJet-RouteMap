{"ast":null,"code":"import \"leaflet/dist/leaflet.css\";\nimport { LMap, LTileLayer, LMarker, LIcon, LTooltip } from \"@vue-leaflet/vue-leaflet\";\nimport westjet from '../assets/westjet.png';\nexport default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LIcon,\n    LTooltip\n  },\n  data() {\n    return {\n      url: 'https://tile.thunderforest.com/atlas/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482],\n      //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [40, 25]\n    };\n  },\n  methods: {\n    latLng: function (lat, lng) {\n      return [lat, lng];\n    },\n    openPopup: async function (dest, index) {\n      let marker = this.$refs.markers[index].leafletObject;\n      const price = await this.getPrice(dest.code);\n      let popupContent = `You have selected ${dest.name}'s airport <br> Price: ${price}`;\n      marker.unbindPopup().bindPopup(popupContent).openPopup();\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude];\n        });\n      }\n    },\n    getPrice: async function (destination) {\n      let route = \"YYC\" + destination;\n      const axios = require('axios');\n      let price = \"\";\n      const params = new URLSearchParams();\n      params.append('o', 'YYC');\n      params.append('d', destination);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n      try {\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n      } catch (error) {\n        console.log(error);\n        price = \"no price available.\";\n      }\n      return price;\n    }\n  },\n  mounted() {\n    this.getLocation();\n  }\n};","map":{"version":3,"mappings":"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","names":["LMap","LTileLayer","LMarker","LIcon","LTooltip","westjet","name","props","dests","Array","components","data","url","attribution","zoom","center","markerLatLngBob","icon","iconSize","methods","latLng","lat","lng","openPopup","dest","index","marker","$refs","markers","leafletObject","price","getPrice","code","popupContent","unbindPopup","bindPopup","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","destination","route","axios","require","params","URLSearchParams","append","response","get","headers","error","console","log","mounted"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/src/components/DestMap.vue"],"sourcesContent":["<template>\n  <div style=\"height:1000px; width:1300px\">\n    <l-map ref=\"map\" :zoom=\"zoom\" :center=\"center\" maxZoom=\"7\" minZoom=\"4\">\n      <l-tile-layer ref=\"tilelayer\"\n        url=\"https://tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db\"\n        layer-type=\"base\" name=\"OpenStreetMap\"></l-tile-layer>\n      <l-marker ref=\"markers\" :key=\"index\" v-for=\"(dest, index) in dests\" :lat-lng=\"latLng(dest.latitude, dest.longitude)\" @click=\"openPopup(dest, index)\">\n        <l-icon :icon-size=\"iconSize\" :icon-url=\"icon\"></l-icon>\n        <l-tooltip>\n          {{ dest.name }}, {{ dest.countryName }}</l-tooltip>\n      </l-marker>\n    </l-map>\n  </div>\n</template>\n\n <script>\n import \"leaflet/dist/leaflet.css\";\n import {\n  LMap,\n  LTileLayer,\n  LMarker,\n  LIcon,\n  LTooltip\n } from \"@vue-leaflet/vue-leaflet\";\n\n import westjet from '../assets/westjet.png';\n\n\n export default {\n  name: 'DestMap',\n  props: {\n    dests: Array\n  },\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LIcon,\n    LTooltip\n  },\n  data() {\n    return {\n      url: 'https://tile.thunderforest.com/atlas/{z}/{x}/{y}.png?apikey=9b2313ed32304004a51c1494aedf88db',\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 4,\n      center: [47.313220, -1.319482], //default\n      markerLatLngBob: [47.313220, -17.319482],\n      icon: westjet,\n      iconSize: [40, 25] \n    };\n  },\n  methods: {\n    latLng: function (lat, lng) {\n      return [lat, lng]\n    },\n    openPopup: async function(dest, index) {\n      let marker = this.$refs.markers[index].leafletObject;\n      \n      const price = await this.getPrice(dest.code);\n\n      let popupContent = `You have selected ${dest.name}'s airport <br> Price: ${price}`;\n      marker.unbindPopup().bindPopup(popupContent).openPopup();\n\n    },\n    getLocation: function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          this.center = [latitude, longitude]\n        });\n      }\n    },\n    getPrice: async function (destination) {\n \n      let route = \"YYC\"+ destination\n\n      const axios = require('axios');\n\n      let price = \"\"\n\n      const params = new URLSearchParams();\n      params.append('o', 'YYC');\n      params.append('d', destination);\n      params.append('rangeStartOffset', '0');\n      params.append('rangeEndOffset', '60');\n\n      try{\n        const response = await axios.get('https://api.westjet.com/price-points/v1/retail', {\n          params: params,\n          headers: {\n            'accept': 'application/json'\n          }\n        });\n        price = response.data[route][0].price;\n      } catch(error) {\n        console.log(error);\n        price = \"no price available.\";\n      }\n\n      return price;\n    },\n  },\n  mounted() {\n    this.getLocation()\n\n  }\n };\n</script>\n<style>\n .leaflet-container {\n  border-radius: 25px;\n }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}