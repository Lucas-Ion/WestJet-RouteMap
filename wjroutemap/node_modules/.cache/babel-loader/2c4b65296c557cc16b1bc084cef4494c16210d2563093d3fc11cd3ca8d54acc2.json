{"ast":null,"code":"var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane'\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    }\n  }\n};\nvar GridLayer = {\n  mixins: [Layer],\n  props: {\n    pane: {\n      type: String,\n      default: 'tilePane'\n    },\n    opacity: {\n      type: Number,\n      custom: false,\n      default: 1.0\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    tileSize: {\n      type: Number,\n      default: 256\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.gridLayerOptions = Object.assign({}, this.layerOptions, {\n      pane: this.pane,\n      opacity: this.opacity,\n      zIndex: this.zIndex,\n      tileSize: this.tileSize,\n      noWrap: this.noWrap\n    });\n  }\n};\nvar TileLayer = {\n  mixins: [GridLayer],\n  props: {\n    tms: {\n      type: Boolean,\n      default: false\n    },\n    subdomains: {\n      type: [String, Array],\n      default: 'abc',\n      validator: function (prop) {\n        if (typeof prop === 'string') {\n          return true;\n        }\n        // Validates array that array only contains only strings\n        if (Array.isArray(prop)) {\n          return prop.every(function (subdomain) {\n            return typeof subdomain === 'string';\n          });\n        }\n        return false;\n      }\n    },\n    detectRetina: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.tileLayerOptions = Object.assign({}, this.gridLayerOptions, {\n      tms: this.tms,\n      subdomains: this.subdomains,\n      detectRetina: this.detectRetina\n    });\n  },\n  render: function render() {\n    return null;\n  }\n};\nvar TileLayerWMS = {\n  mixins: [TileLayer],\n  props: {\n    layers: {\n      type: String,\n      default: ''\n    },\n    styles: {\n      type: String,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'image/jpeg'\n    },\n    transparent: {\n      type: Boolean,\n      custom: false\n    },\n    version: {\n      type: String,\n      default: '1.1.1'\n    },\n    crs: {\n      default: null\n    },\n    upperCase: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.tileLayerWMSOptions = Object.assign({}, this.tileLayerOptions, {\n      layers: this.layers,\n      styles: this.styles,\n      format: this.format,\n      transparent: this.transparent,\n      version: this.version,\n      crs: this.crs,\n      upperCase: this.upperCase\n    });\n  }\n};\nexport default TileLayerWMS;","map":{"version":3,"names":["Layer","props","pane","type","String","default","attribution","custom","name","undefined","layerType","visible","Boolean","mounted","layerOptions","beforeDestroy","unbindPopup","unbindTooltip","parentContainer","removeLayer","methods","setAttribution","val","old","attributionControl","$parent","mapObject","removeAttribution","addAttribution","setName","addLayer","setLayerType","setVisible","isVisible","hideLayer","tooltip","getTooltip","popup","getPopup","updateVisibleProp","value","$emit","GridLayer","mixins","opacity","Number","zIndex","tileSize","noWrap","gridLayerOptions","Object","assign","TileLayer","tms","subdomains","Array","validator","prop","isArray","every","subdomain","detectRetina","tileLayerOptions","render","TileLayerWMS","layers","styles","format","transparent","version","crs","upperCase","tileLayerWMSOptions"],"sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/vue2-leaflet/dist/mixins/TileLayerWMS.js"],"sourcesContent":["var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane',\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true,\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true,\n    },\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane,\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    },\n  },\n};\n\nvar GridLayer = {\n  mixins: [Layer],\n  props: {\n    pane: {\n      type: String,\n      default: 'tilePane'\n    },\n    opacity: {\n      type: Number,\n      custom: false,\n      default: 1.0\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    tileSize: {\n      type: Number,\n      default: 256\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted () {\n    this.gridLayerOptions = Object.assign({}, this.layerOptions,\n      {pane: this.pane,\n      opacity: this.opacity,\n      zIndex: this.zIndex,\n      tileSize: this.tileSize,\n      noWrap: this.noWrap});\n  }\n};\n\nvar TileLayer = {\n  mixins: [GridLayer],\n  props: {\n    tms: {\n      type: Boolean,\n      default: false,\n    },\n    subdomains: {\n      type: [String, Array],\n      default: 'abc',\n      validator: function (prop) {\n        if (typeof prop === 'string') { return true; }\n        // Validates array that array only contains only strings\n        if (Array.isArray(prop)) {\n          return prop.every(function (subdomain) { return typeof subdomain === 'string'; });\n        }\n        return false;\n      },\n    },\n    detectRetina: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted: function mounted() {\n    this.tileLayerOptions = Object.assign({}, this.gridLayerOptions,\n      {tms: this.tms,\n      subdomains: this.subdomains,\n      detectRetina: this.detectRetina});\n  },\n  render: function render() {\n    return null;\n  },\n};\n\nvar TileLayerWMS = {\n  mixins: [TileLayer],\n  props: {\n    layers: {\n      type: String,\n      default: ''\n    },\n    styles: {\n      type: String,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'image/jpeg'\n    },\n    transparent: {\n      type: Boolean,\n      custom: false\n    },\n    version: {\n      type: String,\n      default: '1.1.1'\n    },\n    crs: {\n      default: null\n    },\n    upperCase: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted () {\n    this.tileLayerWMSOptions = Object.assign({}, this.tileLayerOptions,\n      {layers: this.layers,\n      styles: this.styles,\n      format: this.format,\n      transparent: this.transparent,\n      version: this.version,\n      crs: this.crs,\n      upperCase: this.upperCase});\n  }\n};\n\nexport default TileLayerWMS;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}