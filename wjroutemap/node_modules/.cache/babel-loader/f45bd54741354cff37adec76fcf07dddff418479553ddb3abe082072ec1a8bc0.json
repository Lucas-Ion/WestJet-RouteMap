{"ast":null,"code":"import { onMounted, ref, inject, nextTick } from \"vue\";\nimport { remapEvents, propsBinder, WINDOW_OR_GLOBAL, GLOBAL_LEAFLET_OPT } from \"../utils.js\";\nimport { wmsTileLayerProps, setupWMSTileLayer } from \"../functions/wmsTileLayer\";\nexport default {\n  props: wmsTileLayerProps,\n  setup(props, context) {\n    const leafletRef = ref({});\n    const useGlobalLeaflet = inject(GLOBAL_LEAFLET_OPT);\n    const addLayer = inject(\"addLayer\");\n    const {\n      options,\n      methods\n    } = setupWMSTileLayer(props, leafletRef);\n    onMounted(async () => {\n      const {\n        tileLayer,\n        DomEvent\n      } = useGlobalLeaflet ? WINDOW_OR_GLOBAL.L : await import(\"leaflet/dist/leaflet-src.esm\");\n      leafletRef.value = tileLayer.wms(props.url, options);\n      const listeners = remapEvents(context.attrs);\n      DomEvent.on(leafletRef.value, listeners);\n      propsBinder(methods, leafletRef.value, props);\n      addLayer({\n        ...props,\n        ...methods,\n        leafletObject: leafletRef.value\n      });\n      nextTick(() => context.emit(\"ready\", leafletRef.value));\n    });\n    return {\n      leafletObject: leafletRef.value\n    };\n  },\n  render() {\n    return null;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,QAAO,QAAS,KAAK;AACtD,SACEC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,kBAAkB,QACb,aAAa;AACpB,SACEC,iBAAiB,EACjBC,iBAAiB,QACZ,2BAA2B;AAElC,eAAe;EACbC,KAAK,EAAEF,iBAAiB;EACxBG,KAAK,CAACD,KAAK,EAAEE,OAAO,EAAE;IACpB,MAAMC,UAAS,GAAIZ,GAAG,CAAC,CAAC,CAAC,CAAC;IAE1B,MAAMa,gBAAe,GAAIZ,MAAM,CAACK,kBAAkB,CAAC;IACnD,MAAMQ,QAAO,GAAIb,MAAM,CAAC,UAAU,CAAC;IAEnC,MAAM;MAAEc,OAAO;MAAEC;IAAQ,IAAIR,iBAAiB,CAACC,KAAK,EAAEG,UAAU,CAAC;IAEjEb,SAAS,CAAC,YAAY;MACpB,MAAM;QAAEkB,SAAS;QAAEC;MAAS,IAAIL,gBAAe,GAC3CR,gBAAgB,CAACc,IACjB,MAAM,MAAM,CAAC,8BAA8B,CAAC;MAEhDP,UAAU,CAACQ,KAAI,GAAIH,SAAS,CAACI,GAAG,CAACZ,KAAK,CAACa,GAAG,EAAEP,OAAO,CAAC;MAEpD,MAAMQ,SAAQ,GAAIpB,WAAW,CAACQ,OAAO,CAACa,KAAK,CAAC;MAC5CN,QAAQ,CAACO,EAAE,CAACb,UAAU,CAACQ,KAAK,EAAEG,SAAS,CAAC;MAExCnB,WAAW,CAACY,OAAO,EAAEJ,UAAU,CAACQ,KAAK,EAAEX,KAAK,CAAC;MAC7CK,QAAQ,CAAC;QACP,GAAGL,KAAK;QACR,GAAGO,OAAO;QACVU,aAAa,EAAEd,UAAU,CAACQ;MAC5B,CAAC,CAAC;MACFlB,QAAQ,CAAC,MAAMS,OAAO,CAACgB,IAAI,CAAC,OAAO,EAAEf,UAAU,CAACQ,KAAK,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAO;MAAEM,aAAa,EAAEd,UAAU,CAACQ;IAAM,CAAC;EAC5C,CAAC;EACDQ,MAAM,GAAG;IACP,OAAO,IAAI;EACb;AACF,CAAC","names":["onMounted","ref","inject","nextTick","remapEvents","propsBinder","WINDOW_OR_GLOBAL","GLOBAL_LEAFLET_OPT","wmsTileLayerProps","setupWMSTileLayer","props","setup","context","leafletRef","useGlobalLeaflet","addLayer","options","methods","tileLayer","DomEvent","L","value","wms","url","listeners","attrs","on","leafletObject","emit","render"],"sourceRoot":"","sources":["/Users/lucasion/Desktop/Capstone/WestJet-RouteMap/wjroutemap/node_modules/@vue-leaflet/vue-leaflet/src/components/LWmsTileLayer.vue"],"sourcesContent":["<script>\nimport { onMounted, ref, inject, nextTick } from \"vue\";\nimport {\n  remapEvents,\n  propsBinder,\n  WINDOW_OR_GLOBAL,\n  GLOBAL_LEAFLET_OPT,\n} from \"../utils.js\";\nimport {\n  wmsTileLayerProps,\n  setupWMSTileLayer,\n} from \"../functions/wmsTileLayer\";\n\nexport default {\n  props: wmsTileLayerProps,\n  setup(props, context) {\n    const leafletRef = ref({});\n\n    const useGlobalLeaflet = inject(GLOBAL_LEAFLET_OPT);\n    const addLayer = inject(\"addLayer\");\n\n    const { options, methods } = setupWMSTileLayer(props, leafletRef);\n\n    onMounted(async () => {\n      const { tileLayer, DomEvent } = useGlobalLeaflet\n        ? WINDOW_OR_GLOBAL.L\n        : await import(\"leaflet/dist/leaflet-src.esm\");\n\n      leafletRef.value = tileLayer.wms(props.url, options);\n\n      const listeners = remapEvents(context.attrs);\n      DomEvent.on(leafletRef.value, listeners);\n\n      propsBinder(methods, leafletRef.value, props);\n      addLayer({\n        ...props,\n        ...methods,\n        leafletObject: leafletRef.value,\n      });\n      nextTick(() => context.emit(\"ready\", leafletRef.value));\n    });\n    return { leafletObject: leafletRef.value };\n  },\n  render() {\n    return null;\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}